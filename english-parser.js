module.exports = /*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */
(function() {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.location = location;
    this.name     = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function(expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
          literal: function(expectation) {
            return "\"" + literalEscape(expectation.text) + "\"";
          },

          "class": function(expectation) {
            var escapedParts = "",
                i;

            for (i = 0; i < expectation.parts.length; i++) {
              escapedParts += expectation.parts[i] instanceof Array
                ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
                : classEscape(expectation.parts[i]);
            }

            return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
          },

          any: function(expectation) {
            return "any character";
          },

          end: function(expectation) {
            return "end of input";
          },

          other: function(expectation) {
            return expectation.description;
          }
        };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/"/g,  '\\"')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function classEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/\]/g, '\\]')
        .replace(/\^/g, '\\^')
        .replace(/-/g,  '\\-')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i, j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }
        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ")
            + ", or "
            + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== void 0 ? options : {};

    var peg$FAILED = {},

        peg$startRuleFunctions = { DCEtext: peg$parseDCEtext },
        peg$startRuleFunction  = peg$parseDCEtext,

        peg$c0 = ".",
        peg$c1 = peg$literalExpectation(".", false),
        peg$c2 = ";",
        peg$c3 = peg$literalExpectation(";", false),
        peg$c4 = "?",
        peg$c5 = peg$literalExpectation("?", false),
        peg$c6 = function(i) { return i; },
        peg$c7 = /^[ \t\r\n]/,
        peg$c8 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$c9 = "that",
        peg$c10 = peg$literalExpectation("that", false),
        peg$c11 = "which",
        peg$c12 = peg$literalExpectation("which", false),
        peg$c13 = "who",
        peg$c14 = peg$literalExpectation("who", false),
        peg$c15 = "whose",
        peg$c16 = peg$literalExpectation("whose", false),
        peg$c17 = "where",
        peg$c18 = peg$literalExpectation("where", false),
        peg$c19 = function(i, l, verb, comp) {
        	return {
            	type: "RelativeClause",
            	subject: i,
                link: l,
                verb: verb,
                complement: comp
            };
        },
        peg$c20 = "(",
        peg$c21 = peg$literalExpectation("(", false),
        peg$c22 = ")",
        peg$c23 = peg$literalExpectation(")", false),
        peg$c24 = "you",
        peg$c25 = peg$literalExpectation("you", false),
        peg$c26 = "it",
        peg$c27 = peg$literalExpectation("it", false),
        peg$c28 = "he",
        peg$c29 = peg$literalExpectation("he", false),
        peg$c30 = "she",
        peg$c31 = peg$literalExpectation("she", false),
        peg$c32 = "we",
        peg$c33 = peg$literalExpectation("we", false),
        peg$c34 = "they",
        peg$c35 = peg$literalExpectation("they", false),
        peg$c36 = "i",
        peg$c37 = peg$literalExpectation("i", false),
        peg$c38 = "I",
        peg$c39 = peg$literalExpectation("I", false),
        peg$c40 = "one",
        peg$c41 = peg$literalExpectation("one", false),
        peg$c42 = "myself",
        peg$c43 = peg$literalExpectation("myself", false),
        peg$c44 = "yourself",
        peg$c45 = peg$literalExpectation("yourself", false),
        peg$c46 = "itself",
        peg$c47 = peg$literalExpectation("itself", false),
        peg$c48 = "himself",
        peg$c49 = peg$literalExpectation("himself", false),
        peg$c50 = "herself",
        peg$c51 = peg$literalExpectation("herself", false),
        peg$c52 = "ourselves",
        peg$c53 = peg$literalExpectation("ourselves", false),
        peg$c54 = "yourselves",
        peg$c55 = peg$literalExpectation("yourselves", false),
        peg$c56 = "themselves",
        peg$c57 = peg$literalExpectation("themselves", false),
        peg$c58 = "me",
        peg$c59 = peg$literalExpectation("me", false),
        peg$c60 = "him",
        peg$c61 = peg$literalExpectation("him", false),
        peg$c62 = "her",
        peg$c63 = peg$literalExpectation("her", false),
        peg$c64 = "us",
        peg$c65 = peg$literalExpectation("us", false),
        peg$c66 = "them",
        peg$c67 = peg$literalExpectation("them", false),
        peg$c68 = function(a, i) {
        	return {
            	adjectives: a,
                target: i
            };
        },
        peg$c69 = "there is no ",
        peg$c70 = peg$literalExpectation("there is no ", false),
        peg$c71 = "there is ",
        peg$c72 = peg$literalExpectation("there is ", false),
        peg$c73 = "there are ",
        peg$c74 = peg$literalExpectation("there are ", false),
        peg$c75 = "there isn't ",
        peg$c76 = peg$literalExpectation("there isn't ", false),
        peg$c77 = "there aren't ",
        peg$c78 = peg$literalExpectation("there aren't ", false),
        peg$c79 = function(e, a, existing, comp) {
        	return {
            	type: "Existential",
                existing: existing,
                adverb: a,
                complement: comp,
                numberCategory: e == "there is " || e == "there isn't " || "there is no" ? "singular" : "plural",
                sign: e == "there is " || e == "there are " ? "positive" : "negative",
                followedByDeterminer: e == "there is no " ? false : true
            };
        },
        peg$c80 = "nothing but",
        peg$c81 = peg$literalExpectation("nothing but", false),
        peg$c82 = function(w) {
        	return {
            	type: "NothingBut",
                what: w
            };
        },
        peg$c83 = "nobody but",
        peg$c84 = peg$literalExpectation("nobody but", false),
        peg$c85 = function(w) {
        	return {
            	type: "NobodyBut",
                what: w
            };
        },
        peg$c86 = "each of",
        peg$c87 = peg$literalExpectation("each of", false),
        peg$c88 = function(w) {
        	return {
            	type: "EachOf",
                what: w
            };
        },
        peg$c89 = "and ",
        peg$c90 = peg$literalExpectation("and ", false),
        peg$c91 = "or ",
        peg$c92 = peg$literalExpectation("or ", false),
        peg$c93 = "whose ",
        peg$c94 = peg$literalExpectation("whose ", false),
        peg$c95 = "of ",
        peg$c96 = peg$literalExpectation("of ", false),
        peg$c97 = "to ",
        peg$c98 = peg$literalExpectation("to ", false),
        peg$c99 = function(i1, link, i2) {
        	return {
            	type: "Link",
                link: link.trim(),
                left: i1,
                right: i2
            };
        },
        peg$c100 = "for every ",
        peg$c101 = peg$literalExpectation("for every ", false),
        peg$c102 = "for all ",
        peg$c103 = peg$literalExpectation("for all ", false),
        peg$c104 = "for each of ",
        peg$c105 = peg$literalExpectation("for each of ", false),
        peg$c106 = "for each ",
        peg$c107 = peg$literalExpectation("for each ", false),
        peg$c108 = function(i, topic, fact) {
        	return {
            	type: i == "for every " || i == "for all " ? "UniversalGroup" : "UniversalIndividual",
                quantor: i,
                topic: topic,
                fact: fact
            };
        },
        peg$c109 = "for some ",
        peg$c110 = peg$literalExpectation("for some ", false),
        peg$c111 = "for many ",
        peg$c112 = peg$literalExpectation("for many ", false),
        peg$c113 = "for several ",
        peg$c114 = peg$literalExpectation("for several ", false),
        peg$c115 = "for few ",
        peg$c116 = peg$literalExpectation("for few ", false),
        peg$c117 = "for none ",
        peg$c118 = peg$literalExpectation("for none ", false),
        peg$c119 = function(i, of, topic, fact) {
        	return {
            	type: "Context",
                context: i,
                topic: topic,
                fact: fact,
                of: !!of
            };
        },
        peg$c120 = "the ",
        peg$c121 = peg$literalExpectation("the ", false),
        peg$c122 = "a ",
        peg$c123 = peg$literalExpectation("a ", false),
        peg$c124 = "an ",
        peg$c125 = peg$literalExpectation("an ", false),
        peg$c126 = "another ",
        peg$c127 = peg$literalExpectation("another ", false),
        peg$c128 = "some ",
        peg$c129 = peg$literalExpectation("some ", false),
        peg$c130 = "no ",
        peg$c131 = peg$literalExpectation("no ", false),
        peg$c132 = "every ",
        peg$c133 = peg$literalExpectation("every ", false),
        peg$c134 = "each ",
        peg$c135 = peg$literalExpectation("each ", false),
        peg$c136 = "not every ",
        peg$c137 = peg$literalExpectation("not every ", false),
        peg$c138 = "not each ",
        peg$c139 = peg$literalExpectation("not each ", false),
        peg$c140 = "all ",
        peg$c141 = peg$literalExpectation("all ", false),
        peg$c142 = "not all ",
        peg$c143 = peg$literalExpectation("not all ", false),
        peg$c144 = "how many ",
        peg$c145 = peg$literalExpectation("how many ", false),
        peg$c146 = "how much ",
        peg$c147 = peg$literalExpectation("how much ", false),
        peg$c148 = "this",
        peg$c149 = peg$literalExpectation("this", false),
        peg$c150 = "these",
        peg$c151 = peg$literalExpectation("these", false),
        peg$c152 = "those",
        peg$c153 = peg$literalExpectation("those", false),
        peg$c154 = function(determiner, determined) {
        	return {
            	type: "Determiner",
                determiner: determiner.trim(),
                determined: determined
            };
        },
        peg$c155 = "at most ",
        peg$c156 = peg$literalExpectation("at most ", false),
        peg$c157 = "at least ",
        peg$c158 = peg$literalExpectation("at least ", false),
        peg$c159 = "more than ",
        peg$c160 = peg$literalExpectation("more than ", false),
        peg$c161 = "less than ",
        peg$c162 = peg$literalExpectation("less than ", false),
        peg$c163 = "exactly ",
        peg$c164 = peg$literalExpectation("exactly ", false),
        peg$c165 = function(gq, qy) {
        	return {
            	type: "GeneralisedQuantor",
                quantor: gq.trim(),
                quantity: qy,
            };
        },
        peg$c166 = "nothing",
        peg$c167 = peg$literalExpectation("nothing", false),
        peg$c168 = "nobody",
        peg$c169 = peg$literalExpectation("nobody", false),
        peg$c170 = "no one",
        peg$c171 = peg$literalExpectation("no one", false),
        peg$c172 = "nowhere",
        peg$c173 = peg$literalExpectation("nowhere", false),
        peg$c174 = "something",
        peg$c175 = peg$literalExpectation("something", false),
        peg$c176 = "somebody",
        peg$c177 = peg$literalExpectation("somebody", false),
        peg$c178 = "someone",
        peg$c179 = peg$literalExpectation("someone", false),
        peg$c180 = "somewhere",
        peg$c181 = peg$literalExpectation("somewhere", false),
        peg$c182 = "anything",
        peg$c183 = peg$literalExpectation("anything", false),
        peg$c184 = "anybody",
        peg$c185 = peg$literalExpectation("anybody", false),
        peg$c186 = "anyone",
        peg$c187 = peg$literalExpectation("anyone", false),
        peg$c188 = "anywhere",
        peg$c189 = peg$literalExpectation("anywhere", false),
        peg$c190 = "everything",
        peg$c191 = peg$literalExpectation("everything", false),
        peg$c192 = "everybody",
        peg$c193 = peg$literalExpectation("everybody", false),
        peg$c194 = "everyone",
        peg$c195 = peg$literalExpectation("everyone", false),
        peg$c196 = "not everywhere",
        peg$c197 = peg$literalExpectation("not everywhere", false),
        peg$c198 = "not everything",
        peg$c199 = peg$literalExpectation("not everything", false),
        peg$c200 = "not everybody",
        peg$c201 = peg$literalExpectation("not everybody", false),
        peg$c202 = "not everyone",
        peg$c203 = peg$literalExpectation("not everyone", false),
        peg$c204 = function(what) {
        	return {
            	type: "Generic",
                item: what
            };
        },
        peg$c205 = /^[^ \t\r\n"()[\]']/,
        peg$c206 = peg$classExpectation([" ", "\t", "\r", "\n", "\"", "(", ")", "[", "]", "'"], true, false),
        peg$c207 = "' ",
        peg$c208 = peg$literalExpectation("' ", false),
        peg$c209 = function(owner, owned) {
        	return {
            	type: "Ownership",
                owner: owner,
                owned: owned
            };
        },
        peg$c210 = "'s ",
        peg$c211 = peg$literalExpectation("'s ", false),
        peg$c212 = "its ",
        peg$c213 = peg$literalExpectation("its ", false),
        peg$c214 = "his ",
        peg$c215 = peg$literalExpectation("his ", false),
        peg$c216 = "her ",
        peg$c217 = peg$literalExpectation("her ", false),
        peg$c218 = "his/her ",
        peg$c219 = peg$literalExpectation("his/her ", false),
        peg$c220 = "her/his ",
        peg$c221 = peg$literalExpectation("her/his ", false),
        peg$c222 = "their ",
        peg$c223 = peg$literalExpectation("their ", false),
        peg$c224 = "your ",
        peg$c225 = peg$literalExpectation("your ", false),
        peg$c226 = "own ",
        peg$c227 = peg$literalExpectation("own ", false),
        peg$c228 = function(pp, owned) {
        	return {
            	type: "Possessive",
                pronoun: pp.trim(),
                owned: owned
            };
        },
        peg$c229 = function(s, i) {
        	s.target = i;
        	return s;
        },
        peg$c230 = "times",
        peg$c231 = peg$literalExpectation("times", false),
        peg$c232 = "time",
        peg$c233 = peg$literalExpectation("time", false),
        peg$c234 = "persons",
        peg$c235 = peg$literalExpectation("persons", false),
        peg$c236 = "person",
        peg$c237 = peg$literalExpectation("person", false),
        peg$c238 = "years",
        peg$c239 = peg$literalExpectation("years", false),
        peg$c240 = "year",
        peg$c241 = peg$literalExpectation("year", false),
        peg$c242 = "ways",
        peg$c243 = peg$literalExpectation("ways", false),
        peg$c244 = "way",
        peg$c245 = peg$literalExpectation("way", false),
        peg$c246 = "days",
        peg$c247 = peg$literalExpectation("days", false),
        peg$c248 = "day",
        peg$c249 = peg$literalExpectation("day", false),
        peg$c250 = "things",
        peg$c251 = peg$literalExpectation("things", false),
        peg$c252 = "thing",
        peg$c253 = peg$literalExpectation("thing", false),
        peg$c254 = "women",
        peg$c255 = peg$literalExpectation("women", false),
        peg$c256 = "woman",
        peg$c257 = peg$literalExpectation("woman", false),
        peg$c258 = "men",
        peg$c259 = peg$literalExpectation("men", false),
        peg$c260 = "man",
        peg$c261 = peg$literalExpectation("man", false),
        peg$c262 = "worlds",
        peg$c263 = peg$literalExpectation("worlds", false),
        peg$c264 = "world",
        peg$c265 = peg$literalExpectation("world", false),
        peg$c266 = "lives",
        peg$c267 = peg$literalExpectation("lives", false),
        peg$c268 = "life",
        peg$c269 = peg$literalExpectation("life", false),
        peg$c270 = "hands",
        peg$c271 = peg$literalExpectation("hands", false),
        peg$c272 = "hand",
        peg$c273 = peg$literalExpectation("hand", false),
        peg$c274 = "parts",
        peg$c275 = peg$literalExpectation("parts", false),
        peg$c276 = "part",
        peg$c277 = peg$literalExpectation("part", false),
        peg$c278 = "children",
        peg$c279 = peg$literalExpectation("children", false),
        peg$c280 = "child",
        peg$c281 = peg$literalExpectation("child", false),
        peg$c282 = "eyes",
        peg$c283 = peg$literalExpectation("eyes", false),
        peg$c284 = "eye",
        peg$c285 = peg$literalExpectation("eye", false),
        peg$c286 = "places",
        peg$c287 = peg$literalExpectation("places", false),
        peg$c288 = "place",
        peg$c289 = peg$literalExpectation("place", false),
        peg$c290 = "works",
        peg$c291 = peg$literalExpectation("works", false),
        peg$c292 = "work",
        peg$c293 = peg$literalExpectation("work", false),
        peg$c294 = "weeks",
        peg$c295 = peg$literalExpectation("weeks", false),
        peg$c296 = "week",
        peg$c297 = peg$literalExpectation("week", false),
        peg$c298 = "cases",
        peg$c299 = peg$literalExpectation("cases", false),
        peg$c300 = "case",
        peg$c301 = peg$literalExpectation("case", false),
        peg$c302 = "points",
        peg$c303 = peg$literalExpectation("points", false),
        peg$c304 = "point",
        peg$c305 = peg$literalExpectation("point", false),
        peg$c306 = "truths",
        peg$c307 = peg$literalExpectation("truths", false),
        peg$c308 = "truth",
        peg$c309 = peg$literalExpectation("truth", false),
        peg$c310 = "teams",
        peg$c311 = peg$literalExpectation("teams", false),
        peg$c312 = "team",
        peg$c313 = peg$literalExpectation("team", false),
        peg$c314 = "numbers",
        peg$c315 = peg$literalExpectation("numbers", false),
        peg$c316 = "number",
        peg$c317 = peg$literalExpectation("number", false),
        peg$c318 = "groups",
        peg$c319 = peg$literalExpectation("groups", false),
        peg$c320 = "group",
        peg$c321 = peg$literalExpectation("group", false),
        peg$c322 = "problems",
        peg$c323 = peg$literalExpectation("problems", false),
        peg$c324 = "problem",
        peg$c325 = peg$literalExpectation("problem", false),
        peg$c326 = "solutions",
        peg$c327 = peg$literalExpectation("solutions", false),
        peg$c328 = "solution",
        peg$c329 = peg$literalExpectation("solution", false),
        peg$c330 = "facts",
        peg$c331 = peg$literalExpectation("facts", false),
        peg$c332 = "fact",
        peg$c333 = peg$literalExpectation("fact", false),
        peg$c334 = "tests",
        peg$c335 = peg$literalExpectation("tests", false),
        peg$c336 = "test",
        peg$c337 = peg$literalExpectation("test", false),
        peg$c338 = "beliefs",
        peg$c339 = peg$literalExpectation("beliefs", false),
        peg$c340 = "belief",
        peg$c341 = peg$literalExpectation("belief", false),
        peg$c342 = "there",
        peg$c343 = peg$literalExpectation("there", false),
        peg$c344 = "here",
        peg$c345 = peg$literalExpectation("here", false),
        peg$c346 = "now",
        peg$c347 = peg$literalExpectation("now", false),
        peg$c348 = "mine",
        peg$c349 = peg$literalExpectation("mine", false),
        peg$c350 = "yours",
        peg$c351 = peg$literalExpectation("yours", false),
        peg$c352 = "his",
        peg$c353 = peg$literalExpectation("his", false),
        peg$c354 = "hers",
        peg$c355 = peg$literalExpectation("hers", false),
        peg$c356 = "its",
        peg$c357 = peg$literalExpectation("its", false),
        peg$c358 = "ours",
        peg$c359 = peg$literalExpectation("ours", false),
        peg$c360 = "theirs",
        peg$c361 = peg$literalExpectation("theirs", false),
        peg$c362 = "one's",
        peg$c363 = peg$literalExpectation("one's", false),
        peg$c364 = "more",
        peg$c365 = peg$literalExpectation("more", false),
        peg$c366 = "less",
        peg$c367 = peg$literalExpectation("less", false),
        peg$c368 = "than",
        peg$c369 = peg$literalExpectation("than", false),
        peg$c370 = function(c, a, i) {
        	return {
            	type: "Comparison",
                comparison: c,
                adjective: a,
                target: i
            };
        },
        peg$c371 = function(c, i) {
        	return {
            	type: "Comparison",
                comparitive: c,
                target: i
            };
        },
        peg$c372 = "as",
        peg$c373 = peg$literalExpectation("as", false),
        peg$c374 = function(a, i) {
        	return {
            	type: "Comparison",
                comparison: "as",
                adjective: a,
                target: i
            };
        },
        peg$c375 = "it is false ",
        peg$c376 = peg$literalExpectation("it is false ", false),
        peg$c377 = "it is not true ",
        peg$c378 = peg$literalExpectation("it is not true ", false),
        peg$c379 = "it is possible ",
        peg$c380 = peg$literalExpectation("it is possible ", false),
        peg$c381 = "it is not possible ",
        peg$c382 = peg$literalExpectation("it is not possible ", false),
        peg$c383 = "it is impossible ",
        peg$c384 = peg$literalExpectation("it is impossible ", false),
        peg$c385 = "it is not impossible ",
        peg$c386 = peg$literalExpectation("it is not impossible ", false),
        peg$c387 = "it is necessary ",
        peg$c388 = peg$literalExpectation("it is necessary ", false),
        peg$c389 = "it is not necessary ",
        peg$c390 = peg$literalExpectation("it is not necessary ", false),
        peg$c391 = "it is not provable ",
        peg$c392 = peg$literalExpectation("it is not provable ", false),
        peg$c393 = "it is true ",
        peg$c394 = peg$literalExpectation("it is true ", false),
        peg$c395 = "it is not false ",
        peg$c396 = peg$literalExpectation("it is not false ", false),
        peg$c397 = "that ",
        peg$c398 = peg$literalExpectation("that ", false),
        peg$c399 = function(si, fact) {
        	return {
            	type: "SentenceInit",
                init: si.trim(),
                fact: fact
            };
        },
        peg$c400 = "is it false ",
        peg$c401 = peg$literalExpectation("is it false ", false),
        peg$c402 = "is it not true ",
        peg$c403 = peg$literalExpectation("is it not true ", false),
        peg$c404 = "is it possible ",
        peg$c405 = peg$literalExpectation("is it possible ", false),
        peg$c406 = "is it not possible ",
        peg$c407 = peg$literalExpectation("is it not possible ", false),
        peg$c408 = "is it impossible ",
        peg$c409 = peg$literalExpectation("is it impossible ", false),
        peg$c410 = "is it not impossible ",
        peg$c411 = peg$literalExpectation("is it not impossible ", false),
        peg$c412 = "is it necessary ",
        peg$c413 = peg$literalExpectation("is it necessary ", false),
        peg$c414 = "is it not necessary ",
        peg$c415 = peg$literalExpectation("is it not necessary ", false),
        peg$c416 = "is it not provable ",
        peg$c417 = peg$literalExpectation("is it not provable ", false),
        peg$c418 = "is it true ",
        peg$c419 = peg$literalExpectation("is it true ", false),
        peg$c420 = "is it not false ",
        peg$c421 = peg$literalExpectation("is it not false ", false),
        peg$c422 = function(si, fact) {
        	return {
            	type: "QuestionInit",
                init: si.trim(),
                fact: fact
            };
        },
        peg$c423 = /^[0-9]/,
        peg$c424 = peg$classExpectation([["0", "9"]], false, false),
        peg$c425 = /^[0-9.\-]/,
        peg$c426 = peg$classExpectation([["0", "9"], ".", "-"], false, false),
        peg$c427 = "the",
        peg$c428 = peg$literalExpectation("the", false),
        peg$c429 = "most",
        peg$c430 = peg$literalExpectation("most", false),
        peg$c431 = "least",
        peg$c432 = peg$literalExpectation("least", false),
        peg$c433 = function(dir, adj) {
        	return {
            	type: "Superlative",
                adjective: adj,
                direction: dir
            };
        },
        peg$c434 = "the best",
        peg$c435 = peg$literalExpectation("the best", false),
        peg$c436 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "good",
                direction: "most",
                form: f
            };
        },
        peg$c437 = "the newest",
        peg$c438 = peg$literalExpectation("the newest", false),
        peg$c439 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "new",
                direction: "most",
                form: f
            };
        },
        peg$c440 = "the longest",
        peg$c441 = peg$literalExpectation("the longest", false),
        peg$c442 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "long",
                direction: "most",
                form: f
            };
        },
        peg$c443 = "the greatest",
        peg$c444 = peg$literalExpectation("the greatest", false),
        peg$c445 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "great",
                direction: "most",
                form: f
            };
        },
        peg$c446 = "the littlest",
        peg$c447 = peg$literalExpectation("the littlest", false),
        peg$c448 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "little",
                direction: "most",
                form: f
            };
        },
        peg$c449 = "the oldest",
        peg$c450 = peg$literalExpectation("the oldest", false),
        peg$c451 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "old",
                direction: "most",
                form: f
            };
        },
        peg$c452 = "the biggest",
        peg$c453 = peg$literalExpectation("the biggest", false),
        peg$c454 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "big",
                direction: "most",
                form: f
            };
        },
        peg$c455 = "the highest",
        peg$c456 = peg$literalExpectation("the highest", false),
        peg$c457 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "high",
                direction: "most",
                form: f
            };
        },
        peg$c458 = "the lowest",
        peg$c459 = peg$literalExpectation("the lowest", false),
        peg$c460 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "low",
                direction: "most",
                form: f
            };
        },
        peg$c461 = "the smallest",
        peg$c462 = peg$literalExpectation("the smallest", false),
        peg$c463 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "small",
                direction: "most",
                form: f
            };
        },
        peg$c464 = "the largest",
        peg$c465 = peg$literalExpectation("the largest", false),
        peg$c466 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "large",
                direction: "most",
                form: f
            };
        },
        peg$c467 = "the earliest",
        peg$c468 = peg$literalExpectation("the earliest", false),
        peg$c469 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "early",
                direction: "most",
                form: f
            };
        },
        peg$c470 = "the youngest",
        peg$c471 = peg$literalExpectation("the youngest", false),
        peg$c472 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "young",
                direction: "most",
                form: f
            };
        },
        peg$c473 = "the fewest",
        peg$c474 = peg$literalExpectation("the fewest", false),
        peg$c475 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "few",
                direction: "most",
                form: f
            };
        },
        peg$c476 = "the worst",
        peg$c477 = peg$literalExpectation("the worst", false),
        peg$c478 = function(f) {
        	return {
            	type: "Superlative",
                adjective: "bad",
                direction: "most",
                form: f
            };
        },
        peg$c479 = "better",
        peg$c480 = peg$literalExpectation("better", false),
        peg$c481 = "newer",
        peg$c482 = peg$literalExpectation("newer", false),
        peg$c483 = "longer",
        peg$c484 = peg$literalExpectation("longer", false),
        peg$c485 = "greater",
        peg$c486 = peg$literalExpectation("greater", false),
        peg$c487 = "older",
        peg$c488 = peg$literalExpectation("older", false),
        peg$c489 = "bigger",
        peg$c490 = peg$literalExpectation("bigger", false),
        peg$c491 = "higher",
        peg$c492 = peg$literalExpectation("higher", false),
        peg$c493 = "lower",
        peg$c494 = peg$literalExpectation("lower", false),
        peg$c495 = "smaller",
        peg$c496 = peg$literalExpectation("smaller", false),
        peg$c497 = "larger",
        peg$c498 = peg$literalExpectation("larger", false),
        peg$c499 = "earlier",
        peg$c500 = peg$literalExpectation("earlier", false),
        peg$c501 = "younger",
        peg$c502 = peg$literalExpectation("younger", false),
        peg$c503 = "fewer",
        peg$c504 = peg$literalExpectation("fewer", false),
        peg$c505 = "worse",
        peg$c506 = peg$literalExpectation("worse", false),
        peg$c507 = "good",
        peg$c508 = peg$literalExpectation("good", false),
        peg$c509 = "new",
        peg$c510 = peg$literalExpectation("new", false),
        peg$c511 = "first",
        peg$c512 = peg$literalExpectation("first", false),
        peg$c513 = "last",
        peg$c514 = peg$literalExpectation("last", false),
        peg$c515 = "long",
        peg$c516 = peg$literalExpectation("long", false),
        peg$c517 = "great",
        peg$c518 = peg$literalExpectation("great", false),
        peg$c519 = "little",
        peg$c520 = peg$literalExpectation("little", false),
        peg$c521 = "own",
        peg$c522 = peg$literalExpectation("own", false),
        peg$c523 = "other",
        peg$c524 = peg$literalExpectation("other", false),
        peg$c525 = "old",
        peg$c526 = peg$literalExpectation("old", false),
        peg$c527 = "right",
        peg$c528 = peg$literalExpectation("right", false),
        peg$c529 = "big",
        peg$c530 = peg$literalExpectation("big", false),
        peg$c531 = "high",
        peg$c532 = peg$literalExpectation("high", false),
        peg$c533 = "low",
        peg$c534 = peg$literalExpectation("low", false),
        peg$c535 = "different",
        peg$c536 = peg$literalExpectation("different", false),
        peg$c537 = "small",
        peg$c538 = peg$literalExpectation("small", false),
        peg$c539 = "large",
        peg$c540 = peg$literalExpectation("large", false),
        peg$c541 = "next",
        peg$c542 = peg$literalExpectation("next", false),
        peg$c543 = "early",
        peg$c544 = peg$literalExpectation("early", false),
        peg$c545 = "young",
        peg$c546 = peg$literalExpectation("young", false),
        peg$c547 = "important",
        peg$c548 = peg$literalExpectation("important", false),
        peg$c549 = "few",
        peg$c550 = peg$literalExpectation("few", false),
        peg$c551 = "public",
        peg$c552 = peg$literalExpectation("public", false),
        peg$c553 = "bad",
        peg$c554 = peg$literalExpectation("bad", false),
        peg$c555 = "same",
        peg$c556 = peg$literalExpectation("same", false),
        peg$c557 = "able",
        peg$c558 = peg$literalExpectation("able", false),
        peg$c559 = "true",
        peg$c560 = peg$literalExpectation("true", false),
        peg$c561 = "false",
        peg$c562 = peg$literalExpectation("false", false),
        peg$c563 = function(a) { return a; },
        peg$c564 = function(s) { return s; },
        peg$c565 = function(subject, verb, a) {
        	return {
            	type: "Sentence",
            	subject: subject,
                verb: verb,
                complement: a
            };
        },
        peg$c566 = function(subject, verb, comp) {
        	return {
            	type: "Sentence",
            	subject: subject,
                verb: verb,
                complement: comp
            };
        },
        peg$c567 = "if",
        peg$c568 = peg$literalExpectation("if", false),
        peg$c569 = "then",
        peg$c570 = peg$literalExpectation("then", false),
        peg$c571 = "else",
        peg$c572 = peg$literalExpectation("else", false),
        peg$c573 = function(c, t, e) {
        	return {
            	type: "Rule",
                condition: c,
                thenPart: t,
                elsePart: e
            };
        },
        peg$c574 = function(c, t) {
        	return {
            	type: "Rule",
                condition: c,
                thenPart: t
            };
        },
        peg$c575 = function(a, s) {
        	return {
            	type: "AuxQuestion",
            	auxi: a,
                content: s
            };
        },
        peg$c576 = "is there ",
        peg$c577 = peg$literalExpectation("is there ", false),
        peg$c578 = "are there ",
        peg$c579 = peg$literalExpectation("are there ", false),
        peg$c580 = "isn't there ",
        peg$c581 = peg$literalExpectation("isn't there ", false),
        peg$c582 = "aren't there ",
        peg$c583 = peg$literalExpectation("aren't there ", false),
        peg$c584 = function(e, existing, comp) {
        	return {
            	type: "ExistentialQuestion",
                existing: existing,
                complement: comp,
                numberCategory: e == "is there " || e == "isn't there " ? "singular" : "plural",
                sign: e == "is there " || e == "are there " ? "positive" : "negative",
            };
        },
        peg$c585 = "what",
        peg$c586 = peg$literalExpectation("what", false),
        peg$c587 = "when",
        peg$c588 = peg$literalExpectation("when", false),
        peg$c589 = "whom",
        peg$c590 = peg$literalExpectation("whom", false),
        peg$c591 = "why",
        peg$c592 = peg$literalExpectation("why", false),
        peg$c593 = "how",
        peg$c594 = peg$literalExpectation("how", false),
        peg$c595 = "how far",
        peg$c596 = peg$literalExpectation("how far", false),
        peg$c597 = "how long",
        peg$c598 = peg$literalExpectation("how long", false),
        peg$c599 = "how many",
        peg$c600 = peg$literalExpectation("how many", false),
        peg$c601 = "how much",
        peg$c602 = peg$literalExpectation("how much", false),
        peg$c603 = "how old",
        peg$c604 = peg$literalExpectation("how old", false),
        peg$c605 = "how come",
        peg$c606 = peg$literalExpectation("how come", false),
        peg$c607 = function(w) { return w; },
        peg$c608 = function(wh, topic, auxi, comp, ar, v, cl) {
        	if (v && cl) v.complementLink = cl;
            v = v || auxi;
        	return {
            	type: "WHQuestion",
            	question: wh,
                topic: topic,
                auxi: auxi,
                auxr: ar,
                verb: v,
                complement: comp,
                complementLink: cl
            };
        },
        peg$c609 = function(wh, auxi, comp, ar, v, cl) {
        	if (v && cl) v.complementLink = cl;
            v = v || auxi;
        	return {
            	type: "WHQuestion",
            	question: wh,
                auxi: auxi,
                auxr: ar,
                verb: v,
                subject: comp,
                complementLink: cl
            };
        },
        peg$c610 = function(wh, e) {
        	return {
            	type: "WHQuestion",
            	question: wh,
                existing: e
            };
        },
        peg$c611 = function(wh, s) {
        	return {
            	type: "WHQuestion",
            	question: wh,
                sentence: s
            };
        },
        peg$c612 = "to",
        peg$c613 = peg$literalExpectation("to", false),
        peg$c614 = "from",
        peg$c615 = peg$literalExpectation("from", false),
        peg$c616 = "in",
        peg$c617 = peg$literalExpectation("in", false),
        peg$c618 = "on",
        peg$c619 = peg$literalExpectation("on", false),
        peg$c620 = "up",
        peg$c621 = peg$literalExpectation("up", false),
        peg$c622 = "down",
        peg$c623 = peg$literalExpectation("down", false),
        peg$c624 = "into",
        peg$c625 = peg$literalExpectation("into", false),
        peg$c626 = "onto",
        peg$c627 = peg$literalExpectation("onto", false),
        peg$c628 = "up to",
        peg$c629 = peg$literalExpectation("up to", false),
        peg$c630 = "down to",
        peg$c631 = peg$literalExpectation("down to", false),
        peg$c632 = "like",
        peg$c633 = peg$literalExpectation("like", false),
        peg$c634 = "about",
        peg$c635 = peg$literalExpectation("about", false),
        peg$c636 = "out of",
        peg$c637 = peg$literalExpectation("out of", false),
        peg$c638 = "through",
        peg$c639 = peg$literalExpectation("through", false),
        peg$c640 = "by",
        peg$c641 = peg$literalExpectation("by", false),
        peg$c642 = "at",
        peg$c643 = peg$literalExpectation("at", false),
        peg$c644 = "for",
        peg$c645 = peg$literalExpectation("for", false),
        peg$c646 = "of",
        peg$c647 = peg$literalExpectation("of", false),
        peg$c648 = "over",
        peg$c649 = peg$literalExpectation("over", false),
        peg$c650 = "with",
        peg$c651 = peg$literalExpectation("with", false),
        peg$c652 = "after",
        peg$c653 = peg$literalExpectation("after", false),
        peg$c654 = "before",
        peg$c655 = peg$literalExpectation("before", false),
        peg$c656 = function(s) {
        	return {
            	type: "ThatComplement",
            	that: s,
            };
        },
        peg$c657 = "while",
        peg$c658 = peg$literalExpectation("while", false),
        peg$c659 = function(s) {
        	return {
            	type: "WhileComplement",
            	what: s,
            };
        },
        peg$c660 = "until",
        peg$c661 = peg$literalExpectation("until", false),
        peg$c662 = function(s) {
        	return {
            	type: "UntilComplement",
            	what: s,
            };
        },
        peg$c663 = "during",
        peg$c664 = peg$literalExpectation("during", false),
        peg$c665 = function(i) {
        	return {
            	type: "DuringComplement",
            	what: i,
            };
        },
        peg$c666 = function(link, i) {
        	return {
            	type: "Complement",
            	link: link,
                item: i
            };
        },
        peg$c667 = function(i) {
        	return {
            	type: "Complement",
            	link: "direct",
                item: i
            };
        },
        peg$c668 = "accidentally",
        peg$c669 = peg$literalExpectation("accidentally", false),
        peg$c670 = "actually",
        peg$c671 = peg$literalExpectation("actually", false),
        peg$c672 = "always",
        peg$c673 = peg$literalExpectation("always", false),
        peg$c674 = "awkwardly",
        peg$c675 = peg$literalExpectation("awkwardly", false),
        peg$c676 = "beautifully",
        peg$c677 = peg$literalExpectation("beautifully", false),
        peg$c678 = "briefly",
        peg$c679 = peg$literalExpectation("briefly", false),
        peg$c680 = "carefully",
        peg$c681 = peg$literalExpectation("carefully", false),
        peg$c682 = "certainly",
        peg$c683 = peg$literalExpectation("certainly", false),
        peg$c684 = "easily",
        peg$c685 = peg$literalExpectation("easily", false),
        peg$c686 = "especially",
        peg$c687 = peg$literalExpectation("especially", false),
        peg$c688 = "exactly",
        peg$c689 = peg$literalExpectation("exactly", false),
        peg$c690 = "frequently",
        peg$c691 = peg$literalExpectation("frequently", false),
        peg$c692 = "generally",
        peg$c693 = peg$literalExpectation("generally", false),
        peg$c694 = "greatly",
        peg$c695 = peg$literalExpectation("greatly", false),
        peg$c696 = "happily",
        peg$c697 = peg$literalExpectation("happily", false),
        peg$c698 = "helpfully",
        peg$c699 = peg$literalExpectation("helpfully", false),
        peg$c700 = "honestly",
        peg$c701 = peg$literalExpectation("honestly", false),
        peg$c702 = "immediately",
        peg$c703 = peg$literalExpectation("immediately", false),
        peg$c704 = "lively",
        peg$c705 = peg$literalExpectation("lively", false),
        peg$c706 = "mysteriously",
        peg$c707 = peg$literalExpectation("mysteriously", false),
        peg$c708 = "naturally",
        peg$c709 = peg$literalExpectation("naturally", false),
        peg$c710 = "often",
        peg$c711 = peg$literalExpectation("often", false),
        peg$c712 = "politely",
        peg$c713 = peg$literalExpectation("politely", false),
        peg$c714 = "quickly",
        peg$c715 = peg$literalExpectation("quickly", false),
        peg$c716 = "randomly",
        peg$c717 = peg$literalExpectation("randomly", false),
        peg$c718 = "rapidly",
        peg$c719 = peg$literalExpectation("rapidly", false),
        peg$c720 = "regularly",
        peg$c721 = peg$literalExpectation("regularly", false),
        peg$c722 = "seldom",
        peg$c723 = peg$literalExpectation("seldom", false),
        peg$c724 = "slowly",
        peg$c725 = peg$literalExpectation("slowly", false),
        peg$c726 = "suddenly",
        peg$c727 = peg$literalExpectation("suddenly", false),
        peg$c728 = "thankfully",
        peg$c729 = peg$literalExpectation("thankfully", false),
        peg$c730 = "unexpectedly",
        peg$c731 = peg$literalExpectation("unexpectedly", false),
        peg$c732 = "unfortunately",
        peg$c733 = peg$literalExpectation("unfortunately", false),
        peg$c734 = "usefully",
        peg$c735 = peg$literalExpectation("usefully", false),
        peg$c736 = "voluntarily",
        peg$c737 = peg$literalExpectation("voluntarily", false),
        peg$c738 = "wrongly",
        peg$c739 = peg$literalExpectation("wrongly", false),
        peg$c740 = "yesterday",
        peg$c741 = peg$literalExpectation("yesterday", false),
        peg$c742 = function(au, ad, ar, v) {
        	v.adverbs = ad;
            v.auxiliary = au.form+' '+ar;
            v.aux = au;
            v.auxr = ar;
        	return v;
        },
        peg$c743 = function(a, v) {
        	v.adverbs = a;
        	return v;
        },
        peg$c744 = function(a, v) {
        	v.auxiliary = a;
        	return v;
        },
        peg$c745 = "saying",
        peg$c746 = peg$literalExpectation("saying", false),
        peg$c747 = "says",
        peg$c748 = peg$literalExpectation("says", false),
        peg$c749 = "say",
        peg$c750 = peg$literalExpectation("say", false),
        peg$c751 = "said",
        peg$c752 = peg$literalExpectation("said", false),
        peg$c753 = "getting",
        peg$c754 = peg$literalExpectation("getting", false),
        peg$c755 = "gets",
        peg$c756 = peg$literalExpectation("gets", false),
        peg$c757 = "get",
        peg$c758 = peg$literalExpectation("get", false),
        peg$c759 = "gotten",
        peg$c760 = peg$literalExpectation("gotten", false),
        peg$c761 = "got",
        peg$c762 = peg$literalExpectation("got", false),
        peg$c763 = "making",
        peg$c764 = peg$literalExpectation("making", false),
        peg$c765 = "makes",
        peg$c766 = peg$literalExpectation("makes", false),
        peg$c767 = "make",
        peg$c768 = peg$literalExpectation("make", false),
        peg$c769 = "made",
        peg$c770 = peg$literalExpectation("made", false),
        peg$c771 = "going",
        peg$c772 = peg$literalExpectation("going", false),
        peg$c773 = "goes",
        peg$c774 = peg$literalExpectation("goes", false),
        peg$c775 = "gone",
        peg$c776 = peg$literalExpectation("gone", false),
        peg$c777 = "go",
        peg$c778 = peg$literalExpectation("go", false),
        peg$c779 = "knowing",
        peg$c780 = peg$literalExpectation("knowing", false),
        peg$c781 = "knows",
        peg$c782 = peg$literalExpectation("knows", false),
        peg$c783 = "known",
        peg$c784 = peg$literalExpectation("known", false),
        peg$c785 = "know",
        peg$c786 = peg$literalExpectation("know", false),
        peg$c787 = "takes",
        peg$c788 = peg$literalExpectation("takes", false),
        peg$c789 = "taking",
        peg$c790 = peg$literalExpectation("taking", false),
        peg$c791 = "taken",
        peg$c792 = peg$literalExpectation("taken", false),
        peg$c793 = "take",
        peg$c794 = peg$literalExpectation("take", false),
        peg$c795 = "sees",
        peg$c796 = peg$literalExpectation("sees", false),
        peg$c797 = "seeing",
        peg$c798 = peg$literalExpectation("seeing", false),
        peg$c799 = "seen",
        peg$c800 = peg$literalExpectation("seen", false),
        peg$c801 = "see",
        peg$c802 = peg$literalExpectation("see", false),
        peg$c803 = "comes",
        peg$c804 = peg$literalExpectation("comes", false),
        peg$c805 = "come",
        peg$c806 = peg$literalExpectation("come", false),
        peg$c807 = "coming",
        peg$c808 = peg$literalExpectation("coming", false),
        peg$c809 = "thinks",
        peg$c810 = peg$literalExpectation("thinks", false),
        peg$c811 = "thinking",
        peg$c812 = peg$literalExpectation("thinking", false),
        peg$c813 = "think",
        peg$c814 = peg$literalExpectation("think", false),
        peg$c815 = "thought",
        peg$c816 = peg$literalExpectation("thought", false),
        peg$c817 = "looks",
        peg$c818 = peg$literalExpectation("looks", false),
        peg$c819 = "looking",
        peg$c820 = peg$literalExpectation("looking", false),
        peg$c821 = "looked",
        peg$c822 = peg$literalExpectation("looked", false),
        peg$c823 = "look",
        peg$c824 = peg$literalExpectation("look", false),
        peg$c825 = "wants",
        peg$c826 = peg$literalExpectation("wants", false),
        peg$c827 = "wanting",
        peg$c828 = peg$literalExpectation("wanting", false),
        peg$c829 = "wanted",
        peg$c830 = peg$literalExpectation("wanted", false),
        peg$c831 = "want",
        peg$c832 = peg$literalExpectation("want", false),
        peg$c833 = "gives",
        peg$c834 = peg$literalExpectation("gives", false),
        peg$c835 = "giving",
        peg$c836 = peg$literalExpectation("giving", false),
        peg$c837 = "given",
        peg$c838 = peg$literalExpectation("given", false),
        peg$c839 = "give",
        peg$c840 = peg$literalExpectation("give", false),
        peg$c841 = "uses",
        peg$c842 = peg$literalExpectation("uses", false),
        peg$c843 = "using",
        peg$c844 = peg$literalExpectation("using", false),
        peg$c845 = "used",
        peg$c846 = peg$literalExpectation("used", false),
        peg$c847 = "use",
        peg$c848 = peg$literalExpectation("use", false),
        peg$c849 = "finds",
        peg$c850 = peg$literalExpectation("finds", false),
        peg$c851 = "finding",
        peg$c852 = peg$literalExpectation("finding", false),
        peg$c853 = "found",
        peg$c854 = peg$literalExpectation("found", false),
        peg$c855 = "find",
        peg$c856 = peg$literalExpectation("find", false),
        peg$c857 = "tells",
        peg$c858 = peg$literalExpectation("tells", false),
        peg$c859 = "telling",
        peg$c860 = peg$literalExpectation("telling", false),
        peg$c861 = "told",
        peg$c862 = peg$literalExpectation("told", false),
        peg$c863 = "tell",
        peg$c864 = peg$literalExpectation("tell", false),
        peg$c865 = "asks",
        peg$c866 = peg$literalExpectation("asks", false),
        peg$c867 = "asking",
        peg$c868 = peg$literalExpectation("asking", false),
        peg$c869 = "asked",
        peg$c870 = peg$literalExpectation("asked", false),
        peg$c871 = "ask",
        peg$c872 = peg$literalExpectation("ask", false),
        peg$c873 = "working",
        peg$c874 = peg$literalExpectation("working", false),
        peg$c875 = "worked",
        peg$c876 = peg$literalExpectation("worked", false),
        peg$c877 = "seems",
        peg$c878 = peg$literalExpectation("seems", false),
        peg$c879 = "seeming",
        peg$c880 = peg$literalExpectation("seeming", false),
        peg$c881 = "seemed",
        peg$c882 = peg$literalExpectation("seemed", false),
        peg$c883 = "seem",
        peg$c884 = peg$literalExpectation("seem", false),
        peg$c885 = "feels",
        peg$c886 = peg$literalExpectation("feels", false),
        peg$c887 = "feeling",
        peg$c888 = peg$literalExpectation("feeling", false),
        peg$c889 = "felt",
        peg$c890 = peg$literalExpectation("felt", false),
        peg$c891 = "feel",
        peg$c892 = peg$literalExpectation("feel", false),
        peg$c893 = "tries",
        peg$c894 = peg$literalExpectation("tries", false),
        peg$c895 = "trying",
        peg$c896 = peg$literalExpectation("trying", false),
        peg$c897 = "tried",
        peg$c898 = peg$literalExpectation("tried", false),
        peg$c899 = "try",
        peg$c900 = peg$literalExpectation("try", false),
        peg$c901 = "leaves",
        peg$c902 = peg$literalExpectation("leaves", false),
        peg$c903 = "leave",
        peg$c904 = peg$literalExpectation("leave", false),
        peg$c905 = "leaving",
        peg$c906 = peg$literalExpectation("leaving", false),
        peg$c907 = "left",
        peg$c908 = peg$literalExpectation("left", false),
        peg$c909 = "calls",
        peg$c910 = peg$literalExpectation("calls", false),
        peg$c911 = "calling",
        peg$c912 = peg$literalExpectation("calling", false),
        peg$c913 = "called",
        peg$c914 = peg$literalExpectation("called", false),
        peg$c915 = "call",
        peg$c916 = peg$literalExpectation("call", false),
        peg$c917 = "believes",
        peg$c918 = peg$literalExpectation("believes", false),
        peg$c919 = "believing",
        peg$c920 = peg$literalExpectation("believing", false),
        peg$c921 = "believed",
        peg$c922 = peg$literalExpectation("believed", false),
        peg$c923 = "believe",
        peg$c924 = peg$literalExpectation("believe", false),
        peg$c925 = "is",
        peg$c926 = peg$literalExpectation("is", false),
        peg$c927 = "are",
        peg$c928 = peg$literalExpectation("are", false),
        peg$c929 = "am",
        peg$c930 = peg$literalExpectation("am", false),
        peg$c931 = "being",
        peg$c932 = peg$literalExpectation("being", false),
        peg$c933 = "been",
        peg$c934 = peg$literalExpectation("been", false),
        peg$c935 = function(v) { 
        	return {
            	type: "Verb",
                verb: verbDef[v],
                form: v
            };
        },
        peg$c936 = function(a, ar) {
        	return {
            	type: "Auxiliary",
            	auxiliary: a.form+' '+ar,
                auxi: a,
                auxr: ar
            };
        },
        peg$c937 = "does not ",
        peg$c938 = peg$literalExpectation("does not ", false),
        peg$c939 = "does ",
        peg$c940 = peg$literalExpectation("does ", false),
        peg$c941 = "do not ",
        peg$c942 = peg$literalExpectation("do not ", false),
        peg$c943 = "do ",
        peg$c944 = peg$literalExpectation("do ", false),
        peg$c945 = "are not ",
        peg$c946 = peg$literalExpectation("are not ", false),
        peg$c947 = "are ",
        peg$c948 = peg$literalExpectation("are ", false),
        peg$c949 = "is not ",
        peg$c950 = peg$literalExpectation("is not ", false),
        peg$c951 = "is ",
        peg$c952 = peg$literalExpectation("is ", false),
        peg$c953 = "be ",
        peg$c954 = peg$literalExpectation("be ", false),
        peg$c955 = "must not ",
        peg$c956 = peg$literalExpectation("must not ", false),
        peg$c957 = "must ",
        peg$c958 = peg$literalExpectation("must ", false),
        peg$c959 = "cannot ",
        peg$c960 = peg$literalExpectation("cannot ", false),
        peg$c961 = "can ",
        peg$c962 = peg$literalExpectation("can ", false),
        peg$c963 = "should not ",
        peg$c964 = peg$literalExpectation("should not ", false),
        peg$c965 = "should ",
        peg$c966 = peg$literalExpectation("should ", false),
        peg$c967 = "may not ",
        peg$c968 = peg$literalExpectation("may not ", false),
        peg$c969 = "may ",
        peg$c970 = peg$literalExpectation("may ", false),
        peg$c971 = function(a) {
        	return Object.assign(auxiDef[a], {
            	form: a.trim()
            });
        },
        peg$c972 = "not be",
        peg$c973 = peg$literalExpectation("not be", false),
        peg$c974 = "not provably not",
        peg$c975 = peg$literalExpectation("not provably not", false),
        peg$c976 = "not provably",
        peg$c977 = peg$literalExpectation("not provably", false),
        peg$c978 = "not have to be",
        peg$c979 = peg$literalExpectation("not have to be", false),
        peg$c980 = "not have to",
        peg$c981 = peg$literalExpectation("not have to", false),
        peg$c982 = "not",
        peg$c983 = peg$literalExpectation("not", false),
        peg$c984 = "has to be",
        peg$c985 = peg$literalExpectation("has to be", false),
        peg$c986 = "has to",
        peg$c987 = peg$literalExpectation("has to", false),
        peg$c988 = "have to be",
        peg$c989 = peg$literalExpectation("have to be", false),
        peg$c990 = "have to",
        peg$c991 = peg$literalExpectation("have to", false),
        peg$c992 = "be",
        peg$c993 = peg$literalExpectation("be", false),
        peg$c994 = function(ar) { return ar.trim(); },

        peg$currPos          = 0,
        peg$savedPos         = 0,
        peg$posDetailsCache  = [{ line: 1, column: 1 }],
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$savedPos, peg$currPos);
    }

    function location() {
      return peg$computeLocation(peg$savedPos, peg$currPos);
    }

    function expected(description, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildStructuredError(
        [peg$otherExpectation(description)],
        input.substring(peg$savedPos, peg$currPos),
        location
      );
    }

    function error(message, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildSimpleError(message, location);
    }

    function peg$literalExpectation(text, ignoreCase) {
      return { type: "literal", text: text, ignoreCase: ignoreCase };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
    }

    function peg$anyExpectation() {
      return { type: "any" };
    }

    function peg$endExpectation() {
      return { type: "end" };
    }

    function peg$otherExpectation(description) {
      return { type: "other", description: description };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos], p;

      if (details) {
        return details;
      } else {
        p = pos - 1;
        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line:   details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails   = peg$computePosDetails(endPos);

      return {
        start: {
          offset: startPos,
          line:   startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line:   endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(
        peg$SyntaxError.buildMessage(expected, found),
        expected,
        found,
        location
      );
    }

    function peg$parseDCEtext() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parseitemSentence();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseitemSentence();
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 46) {
              s4 = peg$c0;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c1); }
            }
            if (s4 === peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 59) {
                s4 = peg$c2;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c3); }
              }
              if (s4 === peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 63) {
                  s4 = peg$c4;
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c5); }
                }
              }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c6(s2);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1;

      s0 = [];
      if (peg$c7.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c8); }
      }
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        if (peg$c7.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c8); }
        }
      }

      return s0;
    }

    function peg$parseitem() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      s1 = peg$parseitemContent();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c9) {
            s3 = peg$c9;
            peg$currPos += 4;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c10); }
          }
          if (s3 === peg$FAILED) {
            if (input.substr(peg$currPos, 5) === peg$c11) {
              s3 = peg$c11;
              peg$currPos += 5;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c12); }
            }
            if (s3 === peg$FAILED) {
              if (input.substr(peg$currPos, 3) === peg$c13) {
                s3 = peg$c13;
                peg$currPos += 3;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c14); }
              }
              if (s3 === peg$FAILED) {
                if (input.substr(peg$currPos, 5) === peg$c15) {
                  s3 = peg$c15;
                  peg$currPos += 5;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c16); }
                }
                if (s3 === peg$FAILED) {
                  if (input.substr(peg$currPos, 5) === peg$c17) {
                    s3 = peg$c17;
                    peg$currPos += 5;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c18); }
                  }
                }
              }
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseverb();
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsecomplement();
                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsecomplement();
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c19(s1, s3, s5, s7);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 40) {
          s1 = peg$c20;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c21); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseitemContent();
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 41) {
                  s5 = peg$c22;
                  peg$currPos++;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c23); }
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parse_();
                  if (s6 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c6(s3);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$parseitemContent();
        }
      }

      return s0;
    }

    function peg$parseitemContent() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parseadjective();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = void 0;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parsepossessivePronoun();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          if (input.substr(peg$currPos, 3) === peg$c24) {
            s3 = peg$c24;
            peg$currPos += 3;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c25); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c6(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        peg$silentFails++;
        s2 = peg$parseadjective();
        peg$silentFails--;
        if (s2 === peg$FAILED) {
          s1 = void 0;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          peg$silentFails++;
          s3 = peg$parsepossessivePronoun();
          peg$silentFails--;
          if (s3 === peg$FAILED) {
            s2 = void 0;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            if (input.substr(peg$currPos, 2) === peg$c26) {
              s3 = peg$c26;
              peg$currPos += 2;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c27); }
            }
            if (s3 === peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c28) {
                s3 = peg$c28;
                peg$currPos += 2;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c29); }
              }
              if (s3 === peg$FAILED) {
                if (input.substr(peg$currPos, 3) === peg$c30) {
                  s3 = peg$c30;
                  peg$currPos += 3;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c31); }
                }
              }
            }
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c6(s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$currPos;
          peg$silentFails++;
          s2 = peg$parseadjective();
          peg$silentFails--;
          if (s2 === peg$FAILED) {
            s1 = void 0;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            peg$silentFails++;
            s3 = peg$parsepossessivePronoun();
            peg$silentFails--;
            if (s3 === peg$FAILED) {
              s2 = void 0;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c32) {
                s3 = peg$c32;
                peg$currPos += 2;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c33); }
              }
              if (s3 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c6(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$currPos;
            peg$silentFails++;
            s2 = peg$parseadjective();
            peg$silentFails--;
            if (s2 === peg$FAILED) {
              s1 = void 0;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$currPos;
              peg$silentFails++;
              s3 = peg$parsepossessivePronoun();
              peg$silentFails--;
              if (s3 === peg$FAILED) {
                s2 = void 0;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 !== peg$FAILED) {
                if (input.substr(peg$currPos, 4) === peg$c34) {
                  s3 = peg$c34;
                  peg$currPos += 4;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c35); }
                }
                if (s3 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c6(s3);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$currPos;
              peg$silentFails++;
              s2 = peg$parseadjective();
              peg$silentFails--;
              if (s2 === peg$FAILED) {
                s1 = void 0;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
              if (s1 !== peg$FAILED) {
                s2 = peg$currPos;
                peg$silentFails++;
                s3 = peg$parsepossessivePronoun();
                peg$silentFails--;
                if (s3 === peg$FAILED) {
                  s2 = void 0;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 105) {
                    s3 = peg$c36;
                    peg$currPos++;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c37); }
                  }
                  if (s3 === peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 73) {
                      s3 = peg$c38;
                      peg$currPos++;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c39); }
                    }
                  }
                  if (s3 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c6(s3);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$currPos;
                peg$silentFails++;
                s2 = peg$parseadjective();
                peg$silentFails--;
                if (s2 === peg$FAILED) {
                  s1 = void 0;
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  peg$silentFails++;
                  s3 = peg$parsepossessivePronoun();
                  peg$silentFails--;
                  if (s3 === peg$FAILED) {
                    s2 = void 0;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 !== peg$FAILED) {
                    if (input.substr(peg$currPos, 3) === peg$c40) {
                      s3 = peg$c40;
                      peg$currPos += 3;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c41); }
                    }
                    if (s3 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c6(s3);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 6) === peg$c42) {
                    s0 = peg$c42;
                    peg$currPos += 6;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c43); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 8) === peg$c44) {
                      s0 = peg$c44;
                      peg$currPos += 8;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c45); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 6) === peg$c46) {
                        s0 = peg$c46;
                        peg$currPos += 6;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c47); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 7) === peg$c48) {
                          s0 = peg$c48;
                          peg$currPos += 7;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c49); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 7) === peg$c50) {
                            s0 = peg$c50;
                            peg$currPos += 7;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c51); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 9) === peg$c52) {
                              s0 = peg$c52;
                              peg$currPos += 9;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c53); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 10) === peg$c54) {
                                s0 = peg$c54;
                                peg$currPos += 10;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c55); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 10) === peg$c56) {
                                  s0 = peg$c56;
                                  peg$currPos += 10;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c57); }
                                }
                                if (s0 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 2) === peg$c58) {
                                    s0 = peg$c58;
                                    peg$currPos += 2;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c59); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 3) === peg$c60) {
                                      s0 = peg$c60;
                                      peg$currPos += 3;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c61); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 3) === peg$c62) {
                                        s0 = peg$c62;
                                        peg$currPos += 3;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c63); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 2) === peg$c64) {
                                          s0 = peg$c64;
                                          peg$currPos += 2;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c65); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 4) === peg$c66) {
                                            s0 = peg$c66;
                                            peg$currPos += 4;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c67); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = peg$parsepossessivePronoun();
                                            if (s0 === peg$FAILED) {
                                              s0 = peg$currPos;
                                              s1 = [];
                                              s2 = peg$parseadjective();
                                              if (s2 !== peg$FAILED) {
                                                while (s2 !== peg$FAILED) {
                                                  s1.push(s2);
                                                  s2 = peg$parseadjective();
                                                }
                                              } else {
                                                s1 = peg$FAILED;
                                              }
                                              if (s1 !== peg$FAILED) {
                                                s2 = peg$parse_();
                                                if (s2 !== peg$FAILED) {
                                                  s3 = peg$parseitem();
                                                  if (s3 !== peg$FAILED) {
                                                    s4 = peg$parse_();
                                                    if (s4 !== peg$FAILED) {
                                                      peg$savedPos = s0;
                                                      s1 = peg$c68(s1, s3);
                                                      s0 = s1;
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = peg$currPos;
                                                if (input.substr(peg$currPos, 12) === peg$c69) {
                                                  s1 = peg$c69;
                                                  peg$currPos += 12;
                                                } else {
                                                  s1 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c70); }
                                                }
                                                if (s1 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 9) === peg$c71) {
                                                    s1 = peg$c71;
                                                    peg$currPos += 9;
                                                  } else {
                                                    s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c72); }
                                                  }
                                                  if (s1 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 10) === peg$c73) {
                                                      s1 = peg$c73;
                                                      peg$currPos += 10;
                                                    } else {
                                                      s1 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                    }
                                                    if (s1 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 12) === peg$c75) {
                                                        s1 = peg$c75;
                                                        peg$currPos += 12;
                                                      } else {
                                                        s1 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c76); }
                                                      }
                                                      if (s1 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 13) === peg$c77) {
                                                          s1 = peg$c77;
                                                          peg$currPos += 13;
                                                        } else {
                                                          s1 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c78); }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                if (s1 !== peg$FAILED) {
                                                  s2 = peg$parse_();
                                                  if (s2 !== peg$FAILED) {
                                                    s3 = [];
                                                    s4 = peg$parseadverb();
                                                    while (s4 !== peg$FAILED) {
                                                      s3.push(s4);
                                                      s4 = peg$parseadverb();
                                                    }
                                                    if (s3 !== peg$FAILED) {
                                                      s4 = peg$parseitem();
                                                      if (s4 !== peg$FAILED) {
                                                        s5 = peg$parse_();
                                                        if (s5 !== peg$FAILED) {
                                                          s6 = [];
                                                          s7 = peg$parsecomplement();
                                                          while (s7 !== peg$FAILED) {
                                                            s6.push(s7);
                                                            s7 = peg$parsecomplement();
                                                          }
                                                          if (s6 !== peg$FAILED) {
                                                            s7 = peg$parse_();
                                                            if (s7 !== peg$FAILED) {
                                                              peg$savedPos = s0;
                                                              s1 = peg$c79(s1, s3, s4, s6);
                                                              s0 = s1;
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = peg$currPos;
                                                  if (input.substr(peg$currPos, 11) === peg$c80) {
                                                    s1 = peg$c80;
                                                    peg$currPos += 11;
                                                  } else {
                                                    s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c81); }
                                                  }
                                                  if (s1 !== peg$FAILED) {
                                                    s2 = peg$parse_();
                                                    if (s2 !== peg$FAILED) {
                                                      s3 = peg$parseitem();
                                                      if (s3 !== peg$FAILED) {
                                                        peg$savedPos = s0;
                                                        s1 = peg$c82(s3);
                                                        s0 = s1;
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = peg$currPos;
                                                    if (input.substr(peg$currPos, 10) === peg$c83) {
                                                      s1 = peg$c83;
                                                      peg$currPos += 10;
                                                    } else {
                                                      s1 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c84); }
                                                    }
                                                    if (s1 !== peg$FAILED) {
                                                      s2 = peg$parse_();
                                                      if (s2 !== peg$FAILED) {
                                                        s3 = peg$parseitem();
                                                        if (s3 !== peg$FAILED) {
                                                          peg$savedPos = s0;
                                                          s1 = peg$c85(s3);
                                                          s0 = s1;
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = peg$currPos;
                                                      if (input.substr(peg$currPos, 7) === peg$c86) {
                                                        s1 = peg$c86;
                                                        peg$currPos += 7;
                                                      } else {
                                                        s1 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c87); }
                                                      }
                                                      if (s1 !== peg$FAILED) {
                                                        s2 = peg$parse_();
                                                        if (s2 !== peg$FAILED) {
                                                          s3 = peg$parseitem();
                                                          if (s3 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c88(s3);
                                                            s0 = s1;
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = peg$currPos;
                                                        if (input.charCodeAt(peg$currPos) === 40) {
                                                          s1 = peg$c20;
                                                          peg$currPos++;
                                                        } else {
                                                          s1 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c21); }
                                                        }
                                                        if (s1 !== peg$FAILED) {
                                                          s2 = peg$parseitem();
                                                          if (s2 !== peg$FAILED) {
                                                            s3 = peg$parse_();
                                                            if (s3 !== peg$FAILED) {
                                                              s4 = peg$currPos;
                                                              if (input.substr(peg$currPos, 4) === peg$c89) {
                                                                s5 = peg$c89;
                                                                peg$currPos += 4;
                                                              } else {
                                                                s5 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c90); }
                                                              }
                                                              if (s5 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 3) === peg$c91) {
                                                                  s5 = peg$c91;
                                                                  peg$currPos += 3;
                                                                } else {
                                                                  s5 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c92); }
                                                                }
                                                                if (s5 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 6) === peg$c93) {
                                                                    s5 = peg$c93;
                                                                    peg$currPos += 6;
                                                                  } else {
                                                                    s5 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c94); }
                                                                  }
                                                                  if (s5 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 3) === peg$c95) {
                                                                      s5 = peg$c95;
                                                                      peg$currPos += 3;
                                                                    } else {
                                                                      s5 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c96); }
                                                                    }
                                                                    if (s5 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 3) === peg$c97) {
                                                                        s5 = peg$c97;
                                                                        peg$currPos += 3;
                                                                      } else {
                                                                        s5 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c98); }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              if (s5 !== peg$FAILED) {
                                                                s4 = input.substring(s4, peg$currPos);
                                                              } else {
                                                                s4 = s5;
                                                              }
                                                              if (s4 !== peg$FAILED) {
                                                                s5 = peg$parse_();
                                                                if (s5 !== peg$FAILED) {
                                                                  s6 = peg$parseitem();
                                                                  if (s6 !== peg$FAILED) {
                                                                    s7 = peg$parse_();
                                                                    if (s7 !== peg$FAILED) {
                                                                      if (input.charCodeAt(peg$currPos) === 41) {
                                                                        s8 = peg$c22;
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s8 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c23); }
                                                                      }
                                                                      if (s8 !== peg$FAILED) {
                                                                        s9 = peg$parse_();
                                                                        if (s9 !== peg$FAILED) {
                                                                          peg$savedPos = s0;
                                                                          s1 = peg$c99(s2, s4, s6);
                                                                          s0 = s1;
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          s0 = peg$currPos;
                                                          if (input.substr(peg$currPos, 10) === peg$c100) {
                                                            s1 = peg$c100;
                                                            peg$currPos += 10;
                                                          } else {
                                                            s1 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c101); }
                                                          }
                                                          if (s1 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 8) === peg$c102) {
                                                              s1 = peg$c102;
                                                              peg$currPos += 8;
                                                            } else {
                                                              s1 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c103); }
                                                            }
                                                            if (s1 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 12) === peg$c104) {
                                                                s1 = peg$c104;
                                                                peg$currPos += 12;
                                                              } else {
                                                                s1 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c105); }
                                                              }
                                                              if (s1 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 9) === peg$c106) {
                                                                  s1 = peg$c106;
                                                                  peg$currPos += 9;
                                                                } else {
                                                                  s1 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c107); }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          if (s1 !== peg$FAILED) {
                                                            s2 = peg$parse_();
                                                            if (s2 !== peg$FAILED) {
                                                              s3 = peg$parseitem();
                                                              if (s3 !== peg$FAILED) {
                                                                s4 = peg$parse_();
                                                                if (s4 !== peg$FAILED) {
                                                                  s5 = peg$parsesentence();
                                                                  if (s5 === peg$FAILED) {
                                                                    s5 = peg$parseitem();
                                                                  }
                                                                  if (s5 !== peg$FAILED) {
                                                                    peg$savedPos = s0;
                                                                    s1 = peg$c108(s1, s3, s5);
                                                                    s0 = s1;
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            s0 = peg$currPos;
                                                            if (input.substr(peg$currPos, 9) === peg$c109) {
                                                              s1 = peg$c109;
                                                              peg$currPos += 9;
                                                            } else {
                                                              s1 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c110); }
                                                            }
                                                            if (s1 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 9) === peg$c111) {
                                                                s1 = peg$c111;
                                                                peg$currPos += 9;
                                                              } else {
                                                                s1 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c112); }
                                                              }
                                                              if (s1 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 12) === peg$c113) {
                                                                  s1 = peg$c113;
                                                                  peg$currPos += 12;
                                                                } else {
                                                                  s1 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c114); }
                                                                }
                                                                if (s1 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 8) === peg$c115) {
                                                                    s1 = peg$c115;
                                                                    peg$currPos += 8;
                                                                  } else {
                                                                    s1 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c116); }
                                                                  }
                                                                  if (s1 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 9) === peg$c117) {
                                                                      s1 = peg$c117;
                                                                      peg$currPos += 9;
                                                                    } else {
                                                                      s1 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c118); }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            if (s1 !== peg$FAILED) {
                                                              if (input.substr(peg$currPos, 3) === peg$c95) {
                                                                s2 = peg$c95;
                                                                peg$currPos += 3;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c96); }
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                s2 = null;
                                                              }
                                                              if (s2 !== peg$FAILED) {
                                                                s3 = peg$parse_();
                                                                if (s3 !== peg$FAILED) {
                                                                  s4 = peg$parseitem();
                                                                  if (s4 !== peg$FAILED) {
                                                                    s5 = peg$parse_();
                                                                    if (s5 !== peg$FAILED) {
                                                                      s6 = peg$parsesentence();
                                                                      if (s6 === peg$FAILED) {
                                                                        s6 = peg$parseitem();
                                                                      }
                                                                      if (s6 !== peg$FAILED) {
                                                                        peg$savedPos = s0;
                                                                        s1 = peg$c119(s1, s2, s4, s6);
                                                                        s0 = s1;
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              s0 = peg$currPos;
                                                              s1 = peg$currPos;
                                                              s2 = peg$currPos;
                                                              if (input.substr(peg$currPos, 4) === peg$c120) {
                                                                s3 = peg$c120;
                                                                peg$currPos += 4;
                                                              } else {
                                                                s3 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c121); }
                                                              }
                                                              if (s3 !== peg$FAILED) {
                                                                s4 = peg$parse_();
                                                                if (s4 !== peg$FAILED) {
                                                                  s3 = [s3, s4];
                                                                  s2 = s3;
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s2;
                                                                s2 = peg$FAILED;
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                s2 = peg$currPos;
                                                                if (input.substr(peg$currPos, 2) === peg$c122) {
                                                                  s3 = peg$c122;
                                                                  peg$currPos += 2;
                                                                } else {
                                                                  s3 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c123); }
                                                                }
                                                                if (s3 !== peg$FAILED) {
                                                                  s4 = peg$parse_();
                                                                  if (s4 !== peg$FAILED) {
                                                                    s3 = [s3, s4];
                                                                    s2 = s3;
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  s2 = peg$currPos;
                                                                  if (input.substr(peg$currPos, 3) === peg$c124) {
                                                                    s3 = peg$c124;
                                                                    peg$currPos += 3;
                                                                  } else {
                                                                    s3 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c125); }
                                                                  }
                                                                  if (s3 !== peg$FAILED) {
                                                                    s4 = peg$parse_();
                                                                    if (s4 !== peg$FAILED) {
                                                                      s3 = [s3, s4];
                                                                      s2 = s3;
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                  if (s2 === peg$FAILED) {
                                                                    s2 = peg$currPos;
                                                                    if (input.substr(peg$currPos, 8) === peg$c126) {
                                                                      s3 = peg$c126;
                                                                      peg$currPos += 8;
                                                                    } else {
                                                                      s3 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c127); }
                                                                    }
                                                                    if (s3 !== peg$FAILED) {
                                                                      s4 = peg$parse_();
                                                                      if (s4 !== peg$FAILED) {
                                                                        s3 = [s3, s4];
                                                                        s2 = s3;
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      s2 = peg$currPos;
                                                                      if (input.substr(peg$currPos, 5) === peg$c128) {
                                                                        s3 = peg$c128;
                                                                        peg$currPos += 5;
                                                                      } else {
                                                                        s3 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c129); }
                                                                      }
                                                                      if (s3 !== peg$FAILED) {
                                                                        s4 = peg$parse_();
                                                                        if (s4 !== peg$FAILED) {
                                                                          s3 = [s3, s4];
                                                                          s2 = s3;
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                      if (s2 === peg$FAILED) {
                                                                        s2 = peg$currPos;
                                                                        if (input.substr(peg$currPos, 3) === peg$c130) {
                                                                          s3 = peg$c130;
                                                                          peg$currPos += 3;
                                                                        } else {
                                                                          s3 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c131); }
                                                                        }
                                                                        if (s3 !== peg$FAILED) {
                                                                          s4 = peg$parse_();
                                                                          if (s4 !== peg$FAILED) {
                                                                            s3 = [s3, s4];
                                                                            s2 = s3;
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                        if (s2 === peg$FAILED) {
                                                                          s2 = peg$currPos;
                                                                          if (input.substr(peg$currPos, 6) === peg$c132) {
                                                                            s3 = peg$c132;
                                                                            peg$currPos += 6;
                                                                          } else {
                                                                            s3 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c133); }
                                                                          }
                                                                          if (s3 !== peg$FAILED) {
                                                                            s4 = peg$parse_();
                                                                            if (s4 !== peg$FAILED) {
                                                                              s3 = [s3, s4];
                                                                              s2 = s3;
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                          if (s2 === peg$FAILED) {
                                                                            s2 = peg$currPos;
                                                                            if (input.substr(peg$currPos, 5) === peg$c134) {
                                                                              s3 = peg$c134;
                                                                              peg$currPos += 5;
                                                                            } else {
                                                                              s3 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c135); }
                                                                            }
                                                                            if (s3 !== peg$FAILED) {
                                                                              s4 = peg$parse_();
                                                                              if (s4 !== peg$FAILED) {
                                                                                s3 = [s3, s4];
                                                                                s2 = s3;
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                            if (s2 === peg$FAILED) {
                                                                              s2 = peg$currPos;
                                                                              if (input.substr(peg$currPos, 10) === peg$c136) {
                                                                                s3 = peg$c136;
                                                                                peg$currPos += 10;
                                                                              } else {
                                                                                s3 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c137); }
                                                                              }
                                                                              if (s3 !== peg$FAILED) {
                                                                                s4 = peg$parse_();
                                                                                if (s4 !== peg$FAILED) {
                                                                                  s3 = [s3, s4];
                                                                                  s2 = s3;
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                              if (s2 === peg$FAILED) {
                                                                                s2 = peg$currPos;
                                                                                if (input.substr(peg$currPos, 9) === peg$c138) {
                                                                                  s3 = peg$c138;
                                                                                  peg$currPos += 9;
                                                                                } else {
                                                                                  s3 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c139); }
                                                                                }
                                                                                if (s3 !== peg$FAILED) {
                                                                                  s4 = peg$parse_();
                                                                                  if (s4 !== peg$FAILED) {
                                                                                    s3 = [s3, s4];
                                                                                    s2 = s3;
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                                if (s2 === peg$FAILED) {
                                                                                  s2 = peg$currPos;
                                                                                  if (input.substr(peg$currPos, 4) === peg$c140) {
                                                                                    s3 = peg$c140;
                                                                                    peg$currPos += 4;
                                                                                  } else {
                                                                                    s3 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c141); }
                                                                                  }
                                                                                  if (s3 !== peg$FAILED) {
                                                                                    s4 = peg$parse_();
                                                                                    if (s4 !== peg$FAILED) {
                                                                                      s3 = [s3, s4];
                                                                                      s2 = s3;
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                  if (s2 === peg$FAILED) {
                                                                                    s2 = peg$currPos;
                                                                                    if (input.substr(peg$currPos, 8) === peg$c142) {
                                                                                      s3 = peg$c142;
                                                                                      peg$currPos += 8;
                                                                                    } else {
                                                                                      s3 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c143); }
                                                                                    }
                                                                                    if (s3 !== peg$FAILED) {
                                                                                      s4 = peg$parse_();
                                                                                      if (s4 !== peg$FAILED) {
                                                                                        s3 = [s3, s4];
                                                                                        s2 = s3;
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                    if (s2 === peg$FAILED) {
                                                                                      s2 = peg$currPos;
                                                                                      if (input.substr(peg$currPos, 9) === peg$c144) {
                                                                                        s3 = peg$c144;
                                                                                        peg$currPos += 9;
                                                                                      } else {
                                                                                        s3 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c145); }
                                                                                      }
                                                                                      if (s3 !== peg$FAILED) {
                                                                                        s4 = peg$parse_();
                                                                                        if (s4 !== peg$FAILED) {
                                                                                          s3 = [s3, s4];
                                                                                          s2 = s3;
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                      if (s2 === peg$FAILED) {
                                                                                        s2 = peg$currPos;
                                                                                        if (input.substr(peg$currPos, 9) === peg$c146) {
                                                                                          s3 = peg$c146;
                                                                                          peg$currPos += 9;
                                                                                        } else {
                                                                                          s3 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c147); }
                                                                                        }
                                                                                        if (s3 !== peg$FAILED) {
                                                                                          s4 = peg$parse_();
                                                                                          if (s4 !== peg$FAILED) {
                                                                                            s3 = [s3, s4];
                                                                                            s2 = s3;
                                                                                          } else {
                                                                                            peg$currPos = s2;
                                                                                            s2 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                        if (s2 === peg$FAILED) {
                                                                                          s2 = peg$currPos;
                                                                                          if (input.substr(peg$currPos, 4) === peg$c148) {
                                                                                            s3 = peg$c148;
                                                                                            peg$currPos += 4;
                                                                                          } else {
                                                                                            s3 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c149); }
                                                                                          }
                                                                                          if (s3 !== peg$FAILED) {
                                                                                            s4 = peg$parse_();
                                                                                            if (s4 !== peg$FAILED) {
                                                                                              s3 = [s3, s4];
                                                                                              s2 = s3;
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s2;
                                                                                            s2 = peg$FAILED;
                                                                                          }
                                                                                          if (s2 === peg$FAILED) {
                                                                                            s2 = peg$currPos;
                                                                                            if (input.substr(peg$currPos, 4) === peg$c9) {
                                                                                              s3 = peg$c9;
                                                                                              peg$currPos += 4;
                                                                                            } else {
                                                                                              s3 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c10); }
                                                                                            }
                                                                                            if (s3 !== peg$FAILED) {
                                                                                              s4 = peg$parse_();
                                                                                              if (s4 !== peg$FAILED) {
                                                                                                s3 = [s3, s4];
                                                                                                s2 = s3;
                                                                                              } else {
                                                                                                peg$currPos = s2;
                                                                                                s2 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                            if (s2 === peg$FAILED) {
                                                                                              s2 = peg$currPos;
                                                                                              if (input.substr(peg$currPos, 5) === peg$c150) {
                                                                                                s3 = peg$c150;
                                                                                                peg$currPos += 5;
                                                                                              } else {
                                                                                                s3 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c151); }
                                                                                              }
                                                                                              if (s3 !== peg$FAILED) {
                                                                                                s4 = peg$parse_();
                                                                                                if (s4 !== peg$FAILED) {
                                                                                                  s3 = [s3, s4];
                                                                                                  s2 = s3;
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s2;
                                                                                                s2 = peg$FAILED;
                                                                                              }
                                                                                              if (s2 === peg$FAILED) {
                                                                                                s2 = peg$currPos;
                                                                                                if (input.substr(peg$currPos, 5) === peg$c152) {
                                                                                                  s3 = peg$c152;
                                                                                                  peg$currPos += 5;
                                                                                                } else {
                                                                                                  s3 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c153); }
                                                                                                }
                                                                                                if (s3 !== peg$FAILED) {
                                                                                                  s4 = peg$parse_();
                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                    s3 = [s3, s4];
                                                                                                    s2 = s3;
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                                if (s2 === peg$FAILED) {
                                                                                                  s2 = peg$currPos;
                                                                                                  s3 = peg$parsenumber();
                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                    s4 = peg$parse_();
                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                      s3 = [s3, s4];
                                                                                                      s2 = s3;
                                                                                                    } else {
                                                                                                      peg$currPos = s2;
                                                                                                      s2 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              if (s2 !== peg$FAILED) {
                                                                s1 = input.substring(s1, peg$currPos);
                                                              } else {
                                                                s1 = s2;
                                                              }
                                                              if (s1 !== peg$FAILED) {
                                                                s2 = peg$parseitem();
                                                                if (s2 !== peg$FAILED) {
                                                                  peg$savedPos = s0;
                                                                  s1 = peg$c154(s1, s2);
                                                                  s0 = s1;
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                s0 = peg$currPos;
                                                                s1 = peg$currPos;
                                                                s2 = peg$currPos;
                                                                if (input.substr(peg$currPos, 8) === peg$c155) {
                                                                  s3 = peg$c155;
                                                                  peg$currPos += 8;
                                                                } else {
                                                                  s3 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c156); }
                                                                }
                                                                if (s3 !== peg$FAILED) {
                                                                  s4 = peg$parse_();
                                                                  if (s4 !== peg$FAILED) {
                                                                    s3 = [s3, s4];
                                                                    s2 = s3;
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  s2 = peg$currPos;
                                                                  if (input.substr(peg$currPos, 9) === peg$c157) {
                                                                    s3 = peg$c157;
                                                                    peg$currPos += 9;
                                                                  } else {
                                                                    s3 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c158); }
                                                                  }
                                                                  if (s3 !== peg$FAILED) {
                                                                    s4 = peg$parse_();
                                                                    if (s4 !== peg$FAILED) {
                                                                      s3 = [s3, s4];
                                                                      s2 = s3;
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                  if (s2 === peg$FAILED) {
                                                                    s2 = peg$currPos;
                                                                    if (input.substr(peg$currPos, 10) === peg$c159) {
                                                                      s3 = peg$c159;
                                                                      peg$currPos += 10;
                                                                    } else {
                                                                      s3 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c160); }
                                                                    }
                                                                    if (s3 !== peg$FAILED) {
                                                                      s4 = peg$parse_();
                                                                      if (s4 !== peg$FAILED) {
                                                                        s3 = [s3, s4];
                                                                        s2 = s3;
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      s2 = peg$currPos;
                                                                      if (input.substr(peg$currPos, 10) === peg$c161) {
                                                                        s3 = peg$c161;
                                                                        peg$currPos += 10;
                                                                      } else {
                                                                        s3 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c162); }
                                                                      }
                                                                      if (s3 !== peg$FAILED) {
                                                                        s4 = peg$parse_();
                                                                        if (s4 !== peg$FAILED) {
                                                                          s3 = [s3, s4];
                                                                          s2 = s3;
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                      if (s2 === peg$FAILED) {
                                                                        s2 = peg$currPos;
                                                                        if (input.substr(peg$currPos, 8) === peg$c163) {
                                                                          s3 = peg$c163;
                                                                          peg$currPos += 8;
                                                                        } else {
                                                                          s3 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c164); }
                                                                        }
                                                                        if (s3 !== peg$FAILED) {
                                                                          s4 = peg$parse_();
                                                                          if (s4 !== peg$FAILED) {
                                                                            s3 = [s3, s4];
                                                                            s2 = s3;
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                if (s2 !== peg$FAILED) {
                                                                  s1 = input.substring(s1, peg$currPos);
                                                                } else {
                                                                  s1 = s2;
                                                                }
                                                                if (s1 !== peg$FAILED) {
                                                                  s2 = peg$parseitem();
                                                                  if (s2 !== peg$FAILED) {
                                                                    s3 = peg$parse_();
                                                                    if (s3 !== peg$FAILED) {
                                                                      peg$savedPos = s0;
                                                                      s1 = peg$c165(s1, s2);
                                                                      s0 = s1;
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = peg$parsecomparison();
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = peg$currPos;
                                                                    s1 = peg$currPos;
                                                                    s2 = peg$currPos;
                                                                    if (input.substr(peg$currPos, 7) === peg$c166) {
                                                                      s3 = peg$c166;
                                                                      peg$currPos += 7;
                                                                    } else {
                                                                      s3 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c167); }
                                                                    }
                                                                    if (s3 !== peg$FAILED) {
                                                                      s4 = peg$parse_();
                                                                      if (s4 !== peg$FAILED) {
                                                                        s3 = [s3, s4];
                                                                        s2 = s3;
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      s2 = peg$currPos;
                                                                      if (input.substr(peg$currPos, 6) === peg$c168) {
                                                                        s3 = peg$c168;
                                                                        peg$currPos += 6;
                                                                      } else {
                                                                        s3 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c169); }
                                                                      }
                                                                      if (s3 !== peg$FAILED) {
                                                                        s4 = peg$parse_();
                                                                        if (s4 !== peg$FAILED) {
                                                                          s3 = [s3, s4];
                                                                          s2 = s3;
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                      if (s2 === peg$FAILED) {
                                                                        s2 = peg$currPos;
                                                                        if (input.substr(peg$currPos, 6) === peg$c170) {
                                                                          s3 = peg$c170;
                                                                          peg$currPos += 6;
                                                                        } else {
                                                                          s3 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c171); }
                                                                        }
                                                                        if (s3 !== peg$FAILED) {
                                                                          s4 = peg$parse_();
                                                                          if (s4 !== peg$FAILED) {
                                                                            s3 = [s3, s4];
                                                                            s2 = s3;
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                        if (s2 === peg$FAILED) {
                                                                          s2 = peg$currPos;
                                                                          if (input.substr(peg$currPos, 7) === peg$c172) {
                                                                            s3 = peg$c172;
                                                                            peg$currPos += 7;
                                                                          } else {
                                                                            s3 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c173); }
                                                                          }
                                                                          if (s3 !== peg$FAILED) {
                                                                            s4 = peg$parse_();
                                                                            if (s4 !== peg$FAILED) {
                                                                              s3 = [s3, s4];
                                                                              s2 = s3;
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                          if (s2 === peg$FAILED) {
                                                                            s2 = peg$currPos;
                                                                            if (input.substr(peg$currPos, 9) === peg$c174) {
                                                                              s3 = peg$c174;
                                                                              peg$currPos += 9;
                                                                            } else {
                                                                              s3 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c175); }
                                                                            }
                                                                            if (s3 !== peg$FAILED) {
                                                                              s4 = peg$parse_();
                                                                              if (s4 !== peg$FAILED) {
                                                                                s3 = [s3, s4];
                                                                                s2 = s3;
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                            if (s2 === peg$FAILED) {
                                                                              s2 = peg$currPos;
                                                                              if (input.substr(peg$currPos, 8) === peg$c176) {
                                                                                s3 = peg$c176;
                                                                                peg$currPos += 8;
                                                                              } else {
                                                                                s3 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c177); }
                                                                              }
                                                                              if (s3 !== peg$FAILED) {
                                                                                s4 = peg$parse_();
                                                                                if (s4 !== peg$FAILED) {
                                                                                  s3 = [s3, s4];
                                                                                  s2 = s3;
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                              if (s2 === peg$FAILED) {
                                                                                s2 = peg$currPos;
                                                                                if (input.substr(peg$currPos, 7) === peg$c178) {
                                                                                  s3 = peg$c178;
                                                                                  peg$currPos += 7;
                                                                                } else {
                                                                                  s3 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c179); }
                                                                                }
                                                                                if (s3 !== peg$FAILED) {
                                                                                  s4 = peg$parse_();
                                                                                  if (s4 !== peg$FAILED) {
                                                                                    s3 = [s3, s4];
                                                                                    s2 = s3;
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                                if (s2 === peg$FAILED) {
                                                                                  s2 = peg$currPos;
                                                                                  if (input.substr(peg$currPos, 9) === peg$c180) {
                                                                                    s3 = peg$c180;
                                                                                    peg$currPos += 9;
                                                                                  } else {
                                                                                    s3 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c181); }
                                                                                  }
                                                                                  if (s3 !== peg$FAILED) {
                                                                                    s4 = peg$parse_();
                                                                                    if (s4 !== peg$FAILED) {
                                                                                      s3 = [s3, s4];
                                                                                      s2 = s3;
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                  if (s2 === peg$FAILED) {
                                                                                    s2 = peg$currPos;
                                                                                    if (input.substr(peg$currPos, 8) === peg$c182) {
                                                                                      s3 = peg$c182;
                                                                                      peg$currPos += 8;
                                                                                    } else {
                                                                                      s3 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c183); }
                                                                                    }
                                                                                    if (s3 !== peg$FAILED) {
                                                                                      s4 = peg$parse_();
                                                                                      if (s4 !== peg$FAILED) {
                                                                                        s3 = [s3, s4];
                                                                                        s2 = s3;
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                    if (s2 === peg$FAILED) {
                                                                                      s2 = peg$currPos;
                                                                                      if (input.substr(peg$currPos, 7) === peg$c184) {
                                                                                        s3 = peg$c184;
                                                                                        peg$currPos += 7;
                                                                                      } else {
                                                                                        s3 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c185); }
                                                                                      }
                                                                                      if (s3 !== peg$FAILED) {
                                                                                        s4 = peg$parse_();
                                                                                        if (s4 !== peg$FAILED) {
                                                                                          s3 = [s3, s4];
                                                                                          s2 = s3;
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                      if (s2 === peg$FAILED) {
                                                                                        s2 = peg$currPos;
                                                                                        if (input.substr(peg$currPos, 6) === peg$c186) {
                                                                                          s3 = peg$c186;
                                                                                          peg$currPos += 6;
                                                                                        } else {
                                                                                          s3 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c187); }
                                                                                        }
                                                                                        if (s3 !== peg$FAILED) {
                                                                                          s4 = peg$parse_();
                                                                                          if (s4 !== peg$FAILED) {
                                                                                            s3 = [s3, s4];
                                                                                            s2 = s3;
                                                                                          } else {
                                                                                            peg$currPos = s2;
                                                                                            s2 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                        if (s2 === peg$FAILED) {
                                                                                          s2 = peg$currPos;
                                                                                          if (input.substr(peg$currPos, 8) === peg$c188) {
                                                                                            s3 = peg$c188;
                                                                                            peg$currPos += 8;
                                                                                          } else {
                                                                                            s3 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c189); }
                                                                                          }
                                                                                          if (s3 !== peg$FAILED) {
                                                                                            s4 = peg$parse_();
                                                                                            if (s4 !== peg$FAILED) {
                                                                                              s3 = [s3, s4];
                                                                                              s2 = s3;
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s2;
                                                                                            s2 = peg$FAILED;
                                                                                          }
                                                                                          if (s2 === peg$FAILED) {
                                                                                            s2 = peg$currPos;
                                                                                            if (input.substr(peg$currPos, 10) === peg$c190) {
                                                                                              s3 = peg$c190;
                                                                                              peg$currPos += 10;
                                                                                            } else {
                                                                                              s3 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c191); }
                                                                                            }
                                                                                            if (s3 !== peg$FAILED) {
                                                                                              s4 = peg$parse_();
                                                                                              if (s4 !== peg$FAILED) {
                                                                                                s3 = [s3, s4];
                                                                                                s2 = s3;
                                                                                              } else {
                                                                                                peg$currPos = s2;
                                                                                                s2 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                            if (s2 === peg$FAILED) {
                                                                                              s2 = peg$currPos;
                                                                                              if (input.substr(peg$currPos, 9) === peg$c192) {
                                                                                                s3 = peg$c192;
                                                                                                peg$currPos += 9;
                                                                                              } else {
                                                                                                s3 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c193); }
                                                                                              }
                                                                                              if (s3 !== peg$FAILED) {
                                                                                                s4 = peg$parse_();
                                                                                                if (s4 !== peg$FAILED) {
                                                                                                  s3 = [s3, s4];
                                                                                                  s2 = s3;
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s2;
                                                                                                s2 = peg$FAILED;
                                                                                              }
                                                                                              if (s2 === peg$FAILED) {
                                                                                                s2 = peg$currPos;
                                                                                                if (input.substr(peg$currPos, 8) === peg$c194) {
                                                                                                  s3 = peg$c194;
                                                                                                  peg$currPos += 8;
                                                                                                } else {
                                                                                                  s3 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c195); }
                                                                                                }
                                                                                                if (s3 !== peg$FAILED) {
                                                                                                  s4 = peg$parse_();
                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                    s3 = [s3, s4];
                                                                                                    s2 = s3;
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                                if (s2 === peg$FAILED) {
                                                                                                  s2 = peg$currPos;
                                                                                                  if (input.substr(peg$currPos, 14) === peg$c196) {
                                                                                                    s3 = peg$c196;
                                                                                                    peg$currPos += 14;
                                                                                                  } else {
                                                                                                    s3 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c197); }
                                                                                                  }
                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                    s4 = peg$parse_();
                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                      s3 = [s3, s4];
                                                                                                      s2 = s3;
                                                                                                    } else {
                                                                                                      peg$currPos = s2;
                                                                                                      s2 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                  if (s2 === peg$FAILED) {
                                                                                                    s2 = peg$currPos;
                                                                                                    if (input.substr(peg$currPos, 14) === peg$c198) {
                                                                                                      s3 = peg$c198;
                                                                                                      peg$currPos += 14;
                                                                                                    } else {
                                                                                                      s3 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c199); }
                                                                                                    }
                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                      s4 = peg$parse_();
                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                        s3 = [s3, s4];
                                                                                                        s2 = s3;
                                                                                                      } else {
                                                                                                        peg$currPos = s2;
                                                                                                        s2 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s2;
                                                                                                      s2 = peg$FAILED;
                                                                                                    }
                                                                                                    if (s2 === peg$FAILED) {
                                                                                                      s2 = peg$currPos;
                                                                                                      if (input.substr(peg$currPos, 13) === peg$c200) {
                                                                                                        s3 = peg$c200;
                                                                                                        peg$currPos += 13;
                                                                                                      } else {
                                                                                                        s3 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c201); }
                                                                                                      }
                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                        s4 = peg$parse_();
                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                          s3 = [s3, s4];
                                                                                                          s2 = s3;
                                                                                                        } else {
                                                                                                          peg$currPos = s2;
                                                                                                          s2 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s2;
                                                                                                        s2 = peg$FAILED;
                                                                                                      }
                                                                                                      if (s2 === peg$FAILED) {
                                                                                                        s2 = peg$currPos;
                                                                                                        if (input.substr(peg$currPos, 12) === peg$c202) {
                                                                                                          s3 = peg$c202;
                                                                                                          peg$currPos += 12;
                                                                                                        } else {
                                                                                                          s3 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c203); }
                                                                                                        }
                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                          s4 = peg$parse_();
                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                            s3 = [s3, s4];
                                                                                                            s2 = s3;
                                                                                                          } else {
                                                                                                            peg$currPos = s2;
                                                                                                            s2 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s2;
                                                                                                          s2 = peg$FAILED;
                                                                                                        }
                                                                                                        if (s2 === peg$FAILED) {
                                                                                                          s2 = peg$currPos;
                                                                                                          if (input.substr(peg$currPos, 14) === peg$c196) {
                                                                                                            s3 = peg$c196;
                                                                                                            peg$currPos += 14;
                                                                                                          } else {
                                                                                                            s3 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c197); }
                                                                                                          }
                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                            s4 = peg$parse_();
                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                              s3 = [s3, s4];
                                                                                                              s2 = s3;
                                                                                                            } else {
                                                                                                              peg$currPos = s2;
                                                                                                              s2 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s2;
                                                                                                            s2 = peg$FAILED;
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    if (s2 !== peg$FAILED) {
                                                                      s1 = input.substring(s1, peg$currPos);
                                                                    } else {
                                                                      s1 = s2;
                                                                    }
                                                                    if (s1 !== peg$FAILED) {
                                                                      peg$savedPos = s0;
                                                                      s1 = peg$c204(s1);
                                                                    }
                                                                    s0 = s1;
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = peg$currPos;
                                                                      s1 = peg$currPos;
                                                                      s2 = [];
                                                                      if (peg$c205.test(input.charAt(peg$currPos))) {
                                                                        s3 = input.charAt(peg$currPos);
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s3 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c206); }
                                                                      }
                                                                      if (s3 !== peg$FAILED) {
                                                                        while (s3 !== peg$FAILED) {
                                                                          s2.push(s3);
                                                                          if (peg$c205.test(input.charAt(peg$currPos))) {
                                                                            s3 = input.charAt(peg$currPos);
                                                                            peg$currPos++;
                                                                          } else {
                                                                            s3 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c206); }
                                                                          }
                                                                        }
                                                                      } else {
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                      if (s2 !== peg$FAILED) {
                                                                        s1 = input.substring(s1, peg$currPos);
                                                                      } else {
                                                                        s1 = s2;
                                                                      }
                                                                      if (s1 !== peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 2) === peg$c207) {
                                                                          s2 = peg$c207;
                                                                          peg$currPos += 2;
                                                                        } else {
                                                                          s2 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c208); }
                                                                        }
                                                                        if (s2 !== peg$FAILED) {
                                                                          s3 = peg$parse_();
                                                                          if (s3 !== peg$FAILED) {
                                                                            s4 = peg$parseitem();
                                                                            if (s4 !== peg$FAILED) {
                                                                              peg$savedPos = s0;
                                                                              s1 = peg$c209(s1, s4);
                                                                              s0 = s1;
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        s0 = peg$currPos;
                                                                        s1 = peg$currPos;
                                                                        s2 = [];
                                                                        if (peg$c205.test(input.charAt(peg$currPos))) {
                                                                          s3 = input.charAt(peg$currPos);
                                                                          peg$currPos++;
                                                                        } else {
                                                                          s3 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c206); }
                                                                        }
                                                                        if (s3 !== peg$FAILED) {
                                                                          while (s3 !== peg$FAILED) {
                                                                            s2.push(s3);
                                                                            if (peg$c205.test(input.charAt(peg$currPos))) {
                                                                              s3 = input.charAt(peg$currPos);
                                                                              peg$currPos++;
                                                                            } else {
                                                                              s3 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c206); }
                                                                            }
                                                                          }
                                                                        } else {
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                        if (s2 !== peg$FAILED) {
                                                                          s1 = input.substring(s1, peg$currPos);
                                                                        } else {
                                                                          s1 = s2;
                                                                        }
                                                                        if (s1 !== peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 3) === peg$c210) {
                                                                            s2 = peg$c210;
                                                                            peg$currPos += 3;
                                                                          } else {
                                                                            s2 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c211); }
                                                                          }
                                                                          if (s2 !== peg$FAILED) {
                                                                            s3 = peg$parse_();
                                                                            if (s3 !== peg$FAILED) {
                                                                              s4 = peg$parseitem();
                                                                              if (s4 !== peg$FAILED) {
                                                                                peg$savedPos = s0;
                                                                                s1 = peg$c209(s1, s4);
                                                                                s0 = s1;
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          s0 = peg$currPos;
                                                                          s1 = peg$currPos;
                                                                          s2 = peg$currPos;
                                                                          if (input.substr(peg$currPos, 4) === peg$c212) {
                                                                            s3 = peg$c212;
                                                                            peg$currPos += 4;
                                                                          } else {
                                                                            s3 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c213); }
                                                                          }
                                                                          if (s3 !== peg$FAILED) {
                                                                            s4 = peg$parse_();
                                                                            if (s4 !== peg$FAILED) {
                                                                              s3 = [s3, s4];
                                                                              s2 = s3;
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                          if (s2 === peg$FAILED) {
                                                                            s2 = peg$currPos;
                                                                            if (input.substr(peg$currPos, 4) === peg$c214) {
                                                                              s3 = peg$c214;
                                                                              peg$currPos += 4;
                                                                            } else {
                                                                              s3 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c215); }
                                                                            }
                                                                            if (s3 !== peg$FAILED) {
                                                                              s4 = peg$parse_();
                                                                              if (s4 !== peg$FAILED) {
                                                                                s3 = [s3, s4];
                                                                                s2 = s3;
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                            if (s2 === peg$FAILED) {
                                                                              s2 = peg$currPos;
                                                                              if (input.substr(peg$currPos, 4) === peg$c216) {
                                                                                s3 = peg$c216;
                                                                                peg$currPos += 4;
                                                                              } else {
                                                                                s3 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c217); }
                                                                              }
                                                                              if (s3 !== peg$FAILED) {
                                                                                s4 = peg$parse_();
                                                                                if (s4 !== peg$FAILED) {
                                                                                  s3 = [s3, s4];
                                                                                  s2 = s3;
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                              if (s2 === peg$FAILED) {
                                                                                s2 = peg$currPos;
                                                                                if (input.substr(peg$currPos, 8) === peg$c218) {
                                                                                  s3 = peg$c218;
                                                                                  peg$currPos += 8;
                                                                                } else {
                                                                                  s3 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c219); }
                                                                                }
                                                                                if (s3 !== peg$FAILED) {
                                                                                  s4 = peg$parse_();
                                                                                  if (s4 !== peg$FAILED) {
                                                                                    s3 = [s3, s4];
                                                                                    s2 = s3;
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                                if (s2 === peg$FAILED) {
                                                                                  s2 = peg$currPos;
                                                                                  if (input.substr(peg$currPos, 8) === peg$c220) {
                                                                                    s3 = peg$c220;
                                                                                    peg$currPos += 8;
                                                                                  } else {
                                                                                    s3 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c221); }
                                                                                  }
                                                                                  if (s3 !== peg$FAILED) {
                                                                                    s4 = peg$parse_();
                                                                                    if (s4 !== peg$FAILED) {
                                                                                      s3 = [s3, s4];
                                                                                      s2 = s3;
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                  if (s2 === peg$FAILED) {
                                                                                    s2 = peg$currPos;
                                                                                    if (input.substr(peg$currPos, 6) === peg$c222) {
                                                                                      s3 = peg$c222;
                                                                                      peg$currPos += 6;
                                                                                    } else {
                                                                                      s3 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c223); }
                                                                                    }
                                                                                    if (s3 !== peg$FAILED) {
                                                                                      s4 = peg$parse_();
                                                                                      if (s4 !== peg$FAILED) {
                                                                                        s3 = [s3, s4];
                                                                                        s2 = s3;
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                    if (s2 === peg$FAILED) {
                                                                                      s2 = peg$currPos;
                                                                                      if (input.substr(peg$currPos, 5) === peg$c224) {
                                                                                        s3 = peg$c224;
                                                                                        peg$currPos += 5;
                                                                                      } else {
                                                                                        s3 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c225); }
                                                                                      }
                                                                                      if (s3 !== peg$FAILED) {
                                                                                        s4 = peg$parse_();
                                                                                        if (s4 !== peg$FAILED) {
                                                                                          s3 = [s3, s4];
                                                                                          s2 = s3;
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          if (s2 !== peg$FAILED) {
                                                                            s1 = input.substring(s1, peg$currPos);
                                                                          } else {
                                                                            s1 = s2;
                                                                          }
                                                                          if (s1 !== peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 4) === peg$c226) {
                                                                              s2 = peg$c226;
                                                                              peg$currPos += 4;
                                                                            } else {
                                                                              s2 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c227); }
                                                                            }
                                                                            if (s2 === peg$FAILED) {
                                                                              s2 = null;
                                                                            }
                                                                            if (s2 !== peg$FAILED) {
                                                                              s3 = peg$parse_();
                                                                              if (s3 !== peg$FAILED) {
                                                                                s4 = peg$parseitem();
                                                                                if (s4 !== peg$FAILED) {
                                                                                  peg$savedPos = s0;
                                                                                  s1 = peg$c228(s1, s4);
                                                                                  s0 = s1;
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            s0 = peg$currPos;
                                                                            s1 = peg$parsesuperlative();
                                                                            if (s1 !== peg$FAILED) {
                                                                              s2 = peg$parse_();
                                                                              if (s2 !== peg$FAILED) {
                                                                                s3 = peg$parseitem();
                                                                                if (s3 !== peg$FAILED) {
                                                                                  s4 = peg$parse_();
                                                                                  if (s4 !== peg$FAILED) {
                                                                                    peg$savedPos = s0;
                                                                                    s1 = peg$c229(s1, s3);
                                                                                    s0 = s1;
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              s0 = peg$currPos;
                                                                              if (input.substr(peg$currPos, 5) === peg$c230) {
                                                                                s1 = peg$c230;
                                                                                peg$currPos += 5;
                                                                              } else {
                                                                                s1 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c231); }
                                                                              }
                                                                              if (s1 === peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 4) === peg$c232) {
                                                                                  s1 = peg$c232;
                                                                                  peg$currPos += 4;
                                                                                } else {
                                                                                  s1 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c233); }
                                                                                }
                                                                              }
                                                                              if (s1 === peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 7) === peg$c234) {
                                                                                  s1 = peg$c234;
                                                                                  peg$currPos += 7;
                                                                                } else {
                                                                                  s1 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c235); }
                                                                                }
                                                                                if (s1 === peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 6) === peg$c236) {
                                                                                    s1 = peg$c236;
                                                                                    peg$currPos += 6;
                                                                                  } else {
                                                                                    s1 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c237); }
                                                                                  }
                                                                                }
                                                                                if (s1 === peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 5) === peg$c238) {
                                                                                    s1 = peg$c238;
                                                                                    peg$currPos += 5;
                                                                                  } else {
                                                                                    s1 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c239); }
                                                                                  }
                                                                                  if (s1 === peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 4) === peg$c240) {
                                                                                      s1 = peg$c240;
                                                                                      peg$currPos += 4;
                                                                                    } else {
                                                                                      s1 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c241); }
                                                                                    }
                                                                                  }
                                                                                  if (s1 === peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 4) === peg$c242) {
                                                                                      s1 = peg$c242;
                                                                                      peg$currPos += 4;
                                                                                    } else {
                                                                                      s1 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c243); }
                                                                                    }
                                                                                    if (s1 === peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 3) === peg$c244) {
                                                                                        s1 = peg$c244;
                                                                                        peg$currPos += 3;
                                                                                      } else {
                                                                                        s1 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c245); }
                                                                                      }
                                                                                    }
                                                                                    if (s1 === peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 4) === peg$c246) {
                                                                                        s1 = peg$c246;
                                                                                        peg$currPos += 4;
                                                                                      } else {
                                                                                        s1 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c247); }
                                                                                      }
                                                                                      if (s1 === peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 3) === peg$c248) {
                                                                                          s1 = peg$c248;
                                                                                          peg$currPos += 3;
                                                                                        } else {
                                                                                          s1 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c249); }
                                                                                        }
                                                                                      }
                                                                                      if (s1 === peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 6) === peg$c250) {
                                                                                          s1 = peg$c250;
                                                                                          peg$currPos += 6;
                                                                                        } else {
                                                                                          s1 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c251); }
                                                                                        }
                                                                                        if (s1 === peg$FAILED) {
                                                                                          if (input.substr(peg$currPos, 5) === peg$c252) {
                                                                                            s1 = peg$c252;
                                                                                            peg$currPos += 5;
                                                                                          } else {
                                                                                            s1 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c253); }
                                                                                          }
                                                                                        }
                                                                                        if (s1 === peg$FAILED) {
                                                                                          if (input.substr(peg$currPos, 5) === peg$c254) {
                                                                                            s1 = peg$c254;
                                                                                            peg$currPos += 5;
                                                                                          } else {
                                                                                            s1 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c255); }
                                                                                          }
                                                                                          if (s1 === peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 5) === peg$c256) {
                                                                                              s1 = peg$c256;
                                                                                              peg$currPos += 5;
                                                                                            } else {
                                                                                              s1 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c257); }
                                                                                            }
                                                                                          }
                                                                                          if (s1 === peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 3) === peg$c258) {
                                                                                              s1 = peg$c258;
                                                                                              peg$currPos += 3;
                                                                                            } else {
                                                                                              s1 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c259); }
                                                                                            }
                                                                                            if (s1 === peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 3) === peg$c260) {
                                                                                                s1 = peg$c260;
                                                                                                peg$currPos += 3;
                                                                                              } else {
                                                                                                s1 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c261); }
                                                                                              }
                                                                                            }
                                                                                            if (s1 === peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 6) === peg$c262) {
                                                                                                s1 = peg$c262;
                                                                                                peg$currPos += 6;
                                                                                              } else {
                                                                                                s1 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c263); }
                                                                                              }
                                                                                              if (s1 === peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 5) === peg$c264) {
                                                                                                  s1 = peg$c264;
                                                                                                  peg$currPos += 5;
                                                                                                } else {
                                                                                                  s1 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c265); }
                                                                                                }
                                                                                              }
                                                                                              if (s1 === peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 5) === peg$c266) {
                                                                                                  s1 = peg$c266;
                                                                                                  peg$currPos += 5;
                                                                                                } else {
                                                                                                  s1 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c267); }
                                                                                                }
                                                                                                if (s1 === peg$FAILED) {
                                                                                                  if (input.substr(peg$currPos, 4) === peg$c268) {
                                                                                                    s1 = peg$c268;
                                                                                                    peg$currPos += 4;
                                                                                                  } else {
                                                                                                    s1 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c269); }
                                                                                                  }
                                                                                                }
                                                                                                if (s1 === peg$FAILED) {
                                                                                                  if (input.substr(peg$currPos, 5) === peg$c270) {
                                                                                                    s1 = peg$c270;
                                                                                                    peg$currPos += 5;
                                                                                                  } else {
                                                                                                    s1 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c271); }
                                                                                                  }
                                                                                                  if (s1 === peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 4) === peg$c272) {
                                                                                                      s1 = peg$c272;
                                                                                                      peg$currPos += 4;
                                                                                                    } else {
                                                                                                      s1 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c273); }
                                                                                                    }
                                                                                                  }
                                                                                                  if (s1 === peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 5) === peg$c274) {
                                                                                                      s1 = peg$c274;
                                                                                                      peg$currPos += 5;
                                                                                                    } else {
                                                                                                      s1 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c275); }
                                                                                                    }
                                                                                                    if (s1 === peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 4) === peg$c276) {
                                                                                                        s1 = peg$c276;
                                                                                                        peg$currPos += 4;
                                                                                                      } else {
                                                                                                        s1 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c277); }
                                                                                                      }
                                                                                                    }
                                                                                                    if (s1 === peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 8) === peg$c278) {
                                                                                                        s1 = peg$c278;
                                                                                                        peg$currPos += 8;
                                                                                                      } else {
                                                                                                        s1 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c279); }
                                                                                                      }
                                                                                                      if (s1 === peg$FAILED) {
                                                                                                        if (input.substr(peg$currPos, 5) === peg$c280) {
                                                                                                          s1 = peg$c280;
                                                                                                          peg$currPos += 5;
                                                                                                        } else {
                                                                                                          s1 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c281); }
                                                                                                        }
                                                                                                      }
                                                                                                      if (s1 === peg$FAILED) {
                                                                                                        if (input.substr(peg$currPos, 4) === peg$c282) {
                                                                                                          s1 = peg$c282;
                                                                                                          peg$currPos += 4;
                                                                                                        } else {
                                                                                                          s1 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c283); }
                                                                                                        }
                                                                                                        if (s1 === peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 3) === peg$c284) {
                                                                                                            s1 = peg$c284;
                                                                                                            peg$currPos += 3;
                                                                                                          } else {
                                                                                                            s1 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c285); }
                                                                                                          }
                                                                                                        }
                                                                                                        if (s1 === peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 6) === peg$c286) {
                                                                                                            s1 = peg$c286;
                                                                                                            peg$currPos += 6;
                                                                                                          } else {
                                                                                                            s1 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c287); }
                                                                                                          }
                                                                                                          if (s1 === peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 5) === peg$c288) {
                                                                                                              s1 = peg$c288;
                                                                                                              peg$currPos += 5;
                                                                                                            } else {
                                                                                                              s1 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c289); }
                                                                                                            }
                                                                                                          }
                                                                                                          if (s1 === peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 5) === peg$c290) {
                                                                                                              s1 = peg$c290;
                                                                                                              peg$currPos += 5;
                                                                                                            } else {
                                                                                                              s1 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c291); }
                                                                                                            }
                                                                                                            if (s1 === peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 4) === peg$c292) {
                                                                                                                s1 = peg$c292;
                                                                                                                peg$currPos += 4;
                                                                                                              } else {
                                                                                                                s1 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c293); }
                                                                                                              }
                                                                                                            }
                                                                                                            if (s1 === peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 5) === peg$c294) {
                                                                                                                s1 = peg$c294;
                                                                                                                peg$currPos += 5;
                                                                                                              } else {
                                                                                                                s1 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c295); }
                                                                                                              }
                                                                                                              if (s1 === peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 4) === peg$c296) {
                                                                                                                  s1 = peg$c296;
                                                                                                                  peg$currPos += 4;
                                                                                                                } else {
                                                                                                                  s1 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c297); }
                                                                                                                }
                                                                                                              }
                                                                                                              if (s1 === peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 5) === peg$c298) {
                                                                                                                  s1 = peg$c298;
                                                                                                                  peg$currPos += 5;
                                                                                                                } else {
                                                                                                                  s1 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c299); }
                                                                                                                }
                                                                                                                if (s1 === peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 4) === peg$c300) {
                                                                                                                    s1 = peg$c300;
                                                                                                                    peg$currPos += 4;
                                                                                                                  } else {
                                                                                                                    s1 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c301); }
                                                                                                                  }
                                                                                                                }
                                                                                                                if (s1 === peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 6) === peg$c302) {
                                                                                                                    s1 = peg$c302;
                                                                                                                    peg$currPos += 6;
                                                                                                                  } else {
                                                                                                                    s1 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c303); }
                                                                                                                  }
                                                                                                                  if (s1 === peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 5) === peg$c304) {
                                                                                                                      s1 = peg$c304;
                                                                                                                      peg$currPos += 5;
                                                                                                                    } else {
                                                                                                                      s1 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c305); }
                                                                                                                    }
                                                                                                                  }
                                                                                                                  if (s1 === peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 6) === peg$c306) {
                                                                                                                      s1 = peg$c306;
                                                                                                                      peg$currPos += 6;
                                                                                                                    } else {
                                                                                                                      s1 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c307); }
                                                                                                                    }
                                                                                                                    if (s1 === peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 5) === peg$c308) {
                                                                                                                        s1 = peg$c308;
                                                                                                                        peg$currPos += 5;
                                                                                                                      } else {
                                                                                                                        s1 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c309); }
                                                                                                                      }
                                                                                                                    }
                                                                                                                    if (s1 === peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 5) === peg$c310) {
                                                                                                                        s1 = peg$c310;
                                                                                                                        peg$currPos += 5;
                                                                                                                      } else {
                                                                                                                        s1 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c311); }
                                                                                                                      }
                                                                                                                      if (s1 === peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 4) === peg$c312) {
                                                                                                                          s1 = peg$c312;
                                                                                                                          peg$currPos += 4;
                                                                                                                        } else {
                                                                                                                          s1 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c313); }
                                                                                                                        }
                                                                                                                      }
                                                                                                                      if (s1 === peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 7) === peg$c314) {
                                                                                                                          s1 = peg$c314;
                                                                                                                          peg$currPos += 7;
                                                                                                                        } else {
                                                                                                                          s1 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c315); }
                                                                                                                        }
                                                                                                                        if (s1 === peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 6) === peg$c316) {
                                                                                                                            s1 = peg$c316;
                                                                                                                            peg$currPos += 6;
                                                                                                                          } else {
                                                                                                                            s1 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c317); }
                                                                                                                          }
                                                                                                                        }
                                                                                                                        if (s1 === peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 6) === peg$c318) {
                                                                                                                            s1 = peg$c318;
                                                                                                                            peg$currPos += 6;
                                                                                                                          } else {
                                                                                                                            s1 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c319); }
                                                                                                                          }
                                                                                                                          if (s1 === peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 5) === peg$c320) {
                                                                                                                              s1 = peg$c320;
                                                                                                                              peg$currPos += 5;
                                                                                                                            } else {
                                                                                                                              s1 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c321); }
                                                                                                                            }
                                                                                                                          }
                                                                                                                          if (s1 === peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 8) === peg$c322) {
                                                                                                                              s1 = peg$c322;
                                                                                                                              peg$currPos += 8;
                                                                                                                            } else {
                                                                                                                              s1 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c323); }
                                                                                                                            }
                                                                                                                            if (s1 === peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 7) === peg$c324) {
                                                                                                                                s1 = peg$c324;
                                                                                                                                peg$currPos += 7;
                                                                                                                              } else {
                                                                                                                                s1 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c325); }
                                                                                                                              }
                                                                                                                            }
                                                                                                                            if (s1 === peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 9) === peg$c326) {
                                                                                                                                s1 = peg$c326;
                                                                                                                                peg$currPos += 9;
                                                                                                                              } else {
                                                                                                                                s1 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c327); }
                                                                                                                              }
                                                                                                                              if (s1 === peg$FAILED) {
                                                                                                                                if (input.substr(peg$currPos, 8) === peg$c328) {
                                                                                                                                  s1 = peg$c328;
                                                                                                                                  peg$currPos += 8;
                                                                                                                                } else {
                                                                                                                                  s1 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c329); }
                                                                                                                                }
                                                                                                                              }
                                                                                                                              if (s1 === peg$FAILED) {
                                                                                                                                if (input.substr(peg$currPos, 5) === peg$c330) {
                                                                                                                                  s1 = peg$c330;
                                                                                                                                  peg$currPos += 5;
                                                                                                                                } else {
                                                                                                                                  s1 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c331); }
                                                                                                                                }
                                                                                                                                if (s1 === peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 4) === peg$c332) {
                                                                                                                                    s1 = peg$c332;
                                                                                                                                    peg$currPos += 4;
                                                                                                                                  } else {
                                                                                                                                    s1 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c333); }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                                if (s1 === peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 5) === peg$c334) {
                                                                                                                                    s1 = peg$c334;
                                                                                                                                    peg$currPos += 5;
                                                                                                                                  } else {
                                                                                                                                    s1 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c335); }
                                                                                                                                  }
                                                                                                                                  if (s1 === peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 4) === peg$c336) {
                                                                                                                                      s1 = peg$c336;
                                                                                                                                      peg$currPos += 4;
                                                                                                                                    } else {
                                                                                                                                      s1 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c337); }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                  if (s1 === peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 7) === peg$c338) {
                                                                                                                                      s1 = peg$c338;
                                                                                                                                      peg$currPos += 7;
                                                                                                                                    } else {
                                                                                                                                      s1 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c339); }
                                                                                                                                    }
                                                                                                                                    if (s1 === peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 6) === peg$c340) {
                                                                                                                                        s1 = peg$c340;
                                                                                                                                        peg$currPos += 6;
                                                                                                                                      } else {
                                                                                                                                        s1 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c341); }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                    if (s1 === peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 5) === peg$c342) {
                                                                                                                                        s1 = peg$c342;
                                                                                                                                        peg$currPos += 5;
                                                                                                                                      } else {
                                                                                                                                        s1 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c343); }
                                                                                                                                      }
                                                                                                                                      if (s1 === peg$FAILED) {
                                                                                                                                        if (input.substr(peg$currPos, 4) === peg$c344) {
                                                                                                                                          s1 = peg$c344;
                                                                                                                                          peg$currPos += 4;
                                                                                                                                        } else {
                                                                                                                                          s1 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c345); }
                                                                                                                                        }
                                                                                                                                        if (s1 === peg$FAILED) {
                                                                                                                                          if (input.substr(peg$currPos, 3) === peg$c346) {
                                                                                                                                            s1 = peg$c346;
                                                                                                                                            peg$currPos += 3;
                                                                                                                                          } else {
                                                                                                                                            s1 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c347); }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                              if (s1 !== peg$FAILED) {
                                                                                s0 = input.substring(s0, peg$currPos);
                                                                              } else {
                                                                                s0 = s1;
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsepossessivePronoun() {
      var s0;

      if (input.substr(peg$currPos, 4) === peg$c348) {
        s0 = peg$c348;
        peg$currPos += 4;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c349); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c350) {
          s0 = peg$c350;
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c351); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3) === peg$c352) {
            s0 = peg$c352;
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c353); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c354) {
              s0 = peg$c354;
              peg$currPos += 4;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c355); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 3) === peg$c356) {
                s0 = peg$c356;
                peg$currPos += 3;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c357); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 4) === peg$c358) {
                  s0 = peg$c358;
                  peg$currPos += 4;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c359); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 6) === peg$c360) {
                    s0 = peg$c360;
                    peg$currPos += 6;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c361); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 5) === peg$c362) {
                      s0 = peg$c362;
                      peg$currPos += 5;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c363); }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsecomparison() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c364) {
        s1 = peg$c364;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c365); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c366) {
          s1 = peg$c366;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c367); }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseadjective();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c368) {
                s5 = peg$c368;
                peg$currPos += 4;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c369); }
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseitem();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c370(s1, s3, s7);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomparative();
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c368) {
              s3 = peg$c368;
              peg$currPos += 4;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c369); }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s5 = peg$parseitem();
                if (s5 !== peg$FAILED) {
                  s6 = peg$parse_();
                  if (s6 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c371(s1, s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 2) === peg$c372) {
            s1 = peg$c372;
            peg$currPos += 2;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c373); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseadjective();
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  if (input.substr(peg$currPos, 2) === peg$c372) {
                    s5 = peg$c372;
                    peg$currPos += 2;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c373); }
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parse_();
                    if (s6 !== peg$FAILED) {
                      s7 = peg$parseitem();
                      if (s7 !== peg$FAILED) {
                        s8 = peg$parse_();
                        if (s8 !== peg$FAILED) {
                          peg$savedPos = s0;
                          s1 = peg$c374(s3, s7);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }

      return s0;
    }

    function peg$parsemetaAssertion() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (input.substr(peg$currPos, 12) === peg$c375) {
        s3 = peg$c375;
        peg$currPos += 12;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c376); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = peg$currPos;
        if (input.substr(peg$currPos, 15) === peg$c377) {
          s3 = peg$c377;
          peg$currPos += 15;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c378); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          if (input.substr(peg$currPos, 15) === peg$c379) {
            s3 = peg$c379;
            peg$currPos += 15;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c380); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            if (input.substr(peg$currPos, 19) === peg$c381) {
              s3 = peg$c381;
              peg$currPos += 19;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c382); }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s3 = [s3, s4];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              if (input.substr(peg$currPos, 17) === peg$c383) {
                s3 = peg$c383;
                peg$currPos += 17;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c384); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s3 = [s3, s4];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 === peg$FAILED) {
                s2 = peg$currPos;
                if (input.substr(peg$currPos, 21) === peg$c385) {
                  s3 = peg$c385;
                  peg$currPos += 21;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c386); }
                }
                if (s3 !== peg$FAILED) {
                  s4 = peg$parse_();
                  if (s4 !== peg$FAILED) {
                    s3 = [s3, s4];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 === peg$FAILED) {
                  s2 = peg$currPos;
                  if (input.substr(peg$currPos, 16) === peg$c387) {
                    s3 = peg$c387;
                    peg$currPos += 16;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c388); }
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parse_();
                    if (s4 !== peg$FAILED) {
                      s3 = [s3, s4];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 === peg$FAILED) {
                    s2 = peg$currPos;
                    if (input.substr(peg$currPos, 20) === peg$c389) {
                      s3 = peg$c389;
                      peg$currPos += 20;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c390); }
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parse_();
                      if (s4 !== peg$FAILED) {
                        s3 = [s3, s4];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 === peg$FAILED) {
                      s2 = peg$currPos;
                      if (input.substr(peg$currPos, 19) === peg$c391) {
                        s3 = peg$c391;
                        peg$currPos += 19;
                      } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c392); }
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parse_();
                        if (s4 !== peg$FAILED) {
                          s3 = [s3, s4];
                          s2 = s3;
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 === peg$FAILED) {
                        s2 = peg$currPos;
                        if (input.substr(peg$currPos, 11) === peg$c393) {
                          s3 = peg$c393;
                          peg$currPos += 11;
                        } else {
                          s3 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c394); }
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parse_();
                          if (s4 !== peg$FAILED) {
                            s3 = [s3, s4];
                            s2 = s3;
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 === peg$FAILED) {
                          s2 = peg$currPos;
                          if (input.substr(peg$currPos, 16) === peg$c395) {
                            s3 = peg$c395;
                            peg$currPos += 16;
                          } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c396); }
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parse_();
                            if (s4 !== peg$FAILED) {
                              s3 = [s3, s4];
                              s2 = s3;
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c397) {
          s2 = peg$c397;
          peg$currPos += 5;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c398); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseitem();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c399(s1, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsemetaQuestion() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (input.substr(peg$currPos, 12) === peg$c400) {
        s3 = peg$c400;
        peg$currPos += 12;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c401); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = peg$currPos;
        if (input.substr(peg$currPos, 15) === peg$c402) {
          s3 = peg$c402;
          peg$currPos += 15;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c403); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          if (input.substr(peg$currPos, 15) === peg$c404) {
            s3 = peg$c404;
            peg$currPos += 15;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c405); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            if (input.substr(peg$currPos, 19) === peg$c406) {
              s3 = peg$c406;
              peg$currPos += 19;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c407); }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s3 = [s3, s4];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              if (input.substr(peg$currPos, 17) === peg$c408) {
                s3 = peg$c408;
                peg$currPos += 17;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c409); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s3 = [s3, s4];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 === peg$FAILED) {
                s2 = peg$currPos;
                if (input.substr(peg$currPos, 21) === peg$c410) {
                  s3 = peg$c410;
                  peg$currPos += 21;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c411); }
                }
                if (s3 !== peg$FAILED) {
                  s4 = peg$parse_();
                  if (s4 !== peg$FAILED) {
                    s3 = [s3, s4];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 === peg$FAILED) {
                  s2 = peg$currPos;
                  if (input.substr(peg$currPos, 16) === peg$c412) {
                    s3 = peg$c412;
                    peg$currPos += 16;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c413); }
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parse_();
                    if (s4 !== peg$FAILED) {
                      s3 = [s3, s4];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 === peg$FAILED) {
                    s2 = peg$currPos;
                    if (input.substr(peg$currPos, 20) === peg$c414) {
                      s3 = peg$c414;
                      peg$currPos += 20;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c415); }
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parse_();
                      if (s4 !== peg$FAILED) {
                        s3 = [s3, s4];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 === peg$FAILED) {
                      s2 = peg$currPos;
                      if (input.substr(peg$currPos, 19) === peg$c416) {
                        s3 = peg$c416;
                        peg$currPos += 19;
                      } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c417); }
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parse_();
                        if (s4 !== peg$FAILED) {
                          s3 = [s3, s4];
                          s2 = s3;
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 === peg$FAILED) {
                        s2 = peg$currPos;
                        if (input.substr(peg$currPos, 11) === peg$c418) {
                          s3 = peg$c418;
                          peg$currPos += 11;
                        } else {
                          s3 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c419); }
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parse_();
                          if (s4 !== peg$FAILED) {
                            s3 = [s3, s4];
                            s2 = s3;
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 === peg$FAILED) {
                          s2 = peg$currPos;
                          if (input.substr(peg$currPos, 16) === peg$c420) {
                            s3 = peg$c420;
                            peg$currPos += 16;
                          } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c421); }
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parse_();
                            if (s4 !== peg$FAILED) {
                              s3 = [s3, s4];
                              s2 = s3;
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c397) {
          s2 = peg$c397;
          peg$currPos += 5;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c398); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsesentence();
            if (s4 === peg$FAILED) {
              s4 = peg$parseitem();
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c422(s1, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$currPos;
      if (peg$c423.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c424); }
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        if (peg$c425.test(input.charAt(peg$currPos))) {
          s4 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c426); }
        }
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          if (peg$c425.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c426); }
          }
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }

      return s0;
    }

    function peg$parsesuperlative() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 3) === peg$c427) {
        s1 = peg$c427;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c428); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c429) {
            s3 = peg$c429;
            peg$currPos += 4;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c430); }
          }
          if (s3 === peg$FAILED) {
            if (input.substr(peg$currPos, 5) === peg$c431) {
              s3 = peg$c431;
              peg$currPos += 5;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c432); }
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseadjective();
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c433(s3, s5);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 8) === peg$c434) {
          s1 = peg$c434;
          peg$currPos += 8;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c435); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c436(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 10) === peg$c437) {
            s1 = peg$c437;
            peg$currPos += 10;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c438); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c439(s1);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 11) === peg$c440) {
              s1 = peg$c440;
              peg$currPos += 11;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c441); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parse_();
              if (s2 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c442(s1);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 12) === peg$c443) {
                s1 = peg$c443;
                peg$currPos += 12;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c444); }
              }
              if (s1 !== peg$FAILED) {
                s2 = peg$parse_();
                if (s2 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c445(s1);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 12) === peg$c446) {
                  s1 = peg$c446;
                  peg$currPos += 12;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c447); }
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$parse_();
                  if (s2 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c448(s1);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.substr(peg$currPos, 10) === peg$c449) {
                    s1 = peg$c449;
                    peg$currPos += 10;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c450); }
                  }
                  if (s1 !== peg$FAILED) {
                    s2 = peg$parse_();
                    if (s2 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c451(s1);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.substr(peg$currPos, 11) === peg$c452) {
                      s1 = peg$c452;
                      peg$currPos += 11;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c453); }
                    }
                    if (s1 !== peg$FAILED) {
                      s2 = peg$parse_();
                      if (s2 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c454(s1);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.substr(peg$currPos, 11) === peg$c455) {
                        s1 = peg$c455;
                        peg$currPos += 11;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c456); }
                      }
                      if (s1 !== peg$FAILED) {
                        s2 = peg$parse_();
                        if (s2 !== peg$FAILED) {
                          peg$savedPos = s0;
                          s1 = peg$c457(s1);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.substr(peg$currPos, 10) === peg$c458) {
                          s1 = peg$c458;
                          peg$currPos += 10;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c459); }
                        }
                        if (s1 !== peg$FAILED) {
                          s2 = peg$parse_();
                          if (s2 !== peg$FAILED) {
                            peg$savedPos = s0;
                            s1 = peg$c460(s1);
                            s0 = s1;
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                          s0 = peg$currPos;
                          if (input.substr(peg$currPos, 12) === peg$c461) {
                            s1 = peg$c461;
                            peg$currPos += 12;
                          } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c462); }
                          }
                          if (s1 !== peg$FAILED) {
                            s2 = peg$parse_();
                            if (s2 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c463(s1);
                              s0 = s1;
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                          if (s0 === peg$FAILED) {
                            s0 = peg$currPos;
                            if (input.substr(peg$currPos, 11) === peg$c464) {
                              s1 = peg$c464;
                              peg$currPos += 11;
                            } else {
                              s1 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c465); }
                            }
                            if (s1 !== peg$FAILED) {
                              s2 = peg$parse_();
                              if (s2 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c466(s1);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                            if (s0 === peg$FAILED) {
                              s0 = peg$currPos;
                              if (input.substr(peg$currPos, 12) === peg$c467) {
                                s1 = peg$c467;
                                peg$currPos += 12;
                              } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c468); }
                              }
                              if (s1 !== peg$FAILED) {
                                s2 = peg$parse_();
                                if (s2 !== peg$FAILED) {
                                  peg$savedPos = s0;
                                  s1 = peg$c469(s1);
                                  s0 = s1;
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                              if (s0 === peg$FAILED) {
                                s0 = peg$currPos;
                                if (input.substr(peg$currPos, 12) === peg$c470) {
                                  s1 = peg$c470;
                                  peg$currPos += 12;
                                } else {
                                  s1 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c471); }
                                }
                                if (s1 !== peg$FAILED) {
                                  s2 = peg$parse_();
                                  if (s2 !== peg$FAILED) {
                                    peg$savedPos = s0;
                                    s1 = peg$c472(s1);
                                    s0 = s1;
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = peg$currPos;
                                  if (input.substr(peg$currPos, 8) === peg$c434) {
                                    s1 = peg$c434;
                                    peg$currPos += 8;
                                  } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c435); }
                                  }
                                  if (s1 !== peg$FAILED) {
                                    s2 = peg$parse_();
                                    if (s2 !== peg$FAILED) {
                                      peg$savedPos = s0;
                                      s1 = peg$c436(s1);
                                      s0 = s1;
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$currPos;
                                    if (input.substr(peg$currPos, 10) === peg$c473) {
                                      s1 = peg$c473;
                                      peg$currPos += 10;
                                    } else {
                                      s1 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c474); }
                                    }
                                    if (s1 !== peg$FAILED) {
                                      s2 = peg$parse_();
                                      if (s2 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c475(s1);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$currPos;
                                      if (input.substr(peg$currPos, 9) === peg$c476) {
                                        s1 = peg$c476;
                                        peg$currPos += 9;
                                      } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c477); }
                                      }
                                      if (s1 !== peg$FAILED) {
                                        s2 = peg$parse_();
                                        if (s2 !== peg$FAILED) {
                                          peg$savedPos = s0;
                                          s1 = peg$c478(s1);
                                          s0 = s1;
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsecomparative() {
      var s0;

      if (input.substr(peg$currPos, 6) === peg$c479) {
        s0 = peg$c479;
        peg$currPos += 6;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c480); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c481) {
          s0 = peg$c481;
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c482); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 6) === peg$c483) {
            s0 = peg$c483;
            peg$currPos += 6;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c484); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 7) === peg$c485) {
              s0 = peg$c485;
              peg$currPos += 7;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c486); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 5) === peg$c487) {
                s0 = peg$c487;
                peg$currPos += 5;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c488); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 6) === peg$c489) {
                  s0 = peg$c489;
                  peg$currPos += 6;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c490); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 6) === peg$c491) {
                    s0 = peg$c491;
                    peg$currPos += 6;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c492); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 5) === peg$c493) {
                      s0 = peg$c493;
                      peg$currPos += 5;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c494); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 7) === peg$c495) {
                        s0 = peg$c495;
                        peg$currPos += 7;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c496); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 6) === peg$c497) {
                          s0 = peg$c497;
                          peg$currPos += 6;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c498); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 7) === peg$c499) {
                            s0 = peg$c499;
                            peg$currPos += 7;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c500); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 7) === peg$c501) {
                              s0 = peg$c501;
                              peg$currPos += 7;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c502); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 5) === peg$c503) {
                                s0 = peg$c503;
                                peg$currPos += 5;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c504); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 5) === peg$c505) {
                                  s0 = peg$c505;
                                  peg$currPos += 5;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c506); }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseadjective() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c507) {
        s2 = peg$c507;
        peg$currPos += 4;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c508); }
      }
      if (s2 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c509) {
          s2 = peg$c509;
          peg$currPos += 3;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c510); }
        }
        if (s2 === peg$FAILED) {
          if (input.substr(peg$currPos, 5) === peg$c511) {
            s2 = peg$c511;
            peg$currPos += 5;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c512); }
          }
          if (s2 === peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c513) {
              s2 = peg$c513;
              peg$currPos += 4;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c514); }
            }
            if (s2 === peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c515) {
                s2 = peg$c515;
                peg$currPos += 4;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c516); }
              }
              if (s2 === peg$FAILED) {
                if (input.substr(peg$currPos, 5) === peg$c517) {
                  s2 = peg$c517;
                  peg$currPos += 5;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c518); }
                }
                if (s2 === peg$FAILED) {
                  if (input.substr(peg$currPos, 6) === peg$c519) {
                    s2 = peg$c519;
                    peg$currPos += 6;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c520); }
                  }
                  if (s2 === peg$FAILED) {
                    if (input.substr(peg$currPos, 3) === peg$c521) {
                      s2 = peg$c521;
                      peg$currPos += 3;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c522); }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 5) === peg$c523) {
                        s2 = peg$c523;
                        peg$currPos += 5;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c524); }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 3) === peg$c525) {
                          s2 = peg$c525;
                          peg$currPos += 3;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c526); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 5) === peg$c527) {
                            s2 = peg$c527;
                            peg$currPos += 5;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c528); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 3) === peg$c529) {
                              s2 = peg$c529;
                              peg$currPos += 3;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c530); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 4) === peg$c531) {
                                s2 = peg$c531;
                                peg$currPos += 4;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c532); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 3) === peg$c533) {
                                  s2 = peg$c533;
                                  peg$currPos += 3;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c534); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 9) === peg$c535) {
                                    s2 = peg$c535;
                                    peg$currPos += 9;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c536); }
                                  }
                                  if (s2 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 5) === peg$c537) {
                                      s2 = peg$c537;
                                      peg$currPos += 5;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c538); }
                                    }
                                    if (s2 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 5) === peg$c539) {
                                        s2 = peg$c539;
                                        peg$currPos += 5;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c540); }
                                      }
                                      if (s2 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 4) === peg$c541) {
                                          s2 = peg$c541;
                                          peg$currPos += 4;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c542); }
                                        }
                                        if (s2 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 5) === peg$c543) {
                                            s2 = peg$c543;
                                            peg$currPos += 5;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c544); }
                                          }
                                          if (s2 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 5) === peg$c545) {
                                              s2 = peg$c545;
                                              peg$currPos += 5;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c546); }
                                            }
                                            if (s2 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 9) === peg$c547) {
                                                s2 = peg$c547;
                                                peg$currPos += 9;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c548); }
                                              }
                                              if (s2 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 3) === peg$c549) {
                                                  s2 = peg$c549;
                                                  peg$currPos += 3;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c550); }
                                                }
                                                if (s2 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 6) === peg$c551) {
                                                    s2 = peg$c551;
                                                    peg$currPos += 6;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c552); }
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 3) === peg$c553) {
                                                      s2 = peg$c553;
                                                      peg$currPos += 3;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c554); }
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 4) === peg$c555) {
                                                        s2 = peg$c555;
                                                        peg$currPos += 4;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c556); }
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 4) === peg$c557) {
                                                          s2 = peg$c557;
                                                          peg$currPos += 4;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c558); }
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 4) === peg$c559) {
                                                            s2 = peg$c559;
                                                            peg$currPos += 4;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c560); }
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 5) === peg$c561) {
                                                              s2 = peg$c561;
                                                              peg$currPos += 5;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c562); }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c563(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseitemSentence() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 46) {
        s1 = peg$c0;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c1); }
      }
      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 59) {
          s1 = peg$c2;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c3); }
        }
        if (s1 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 63) {
            s1 = peg$c4;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c5); }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsesentence();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c564(s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 46) {
          s1 = peg$c0;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c1); }
        }
        if (s1 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 59) {
            s1 = peg$c2;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c3); }
          }
          if (s1 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 63) {
              s1 = peg$c4;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c5); }
            }
          }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseitem();
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c6(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsesentence() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsemetaAssertion();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = void 0;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseitem();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseverb();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parsecomparison();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseadjective();
                  if (s7 === peg$FAILED) {
                    s7 = peg$parsecomparative();
                    if (s7 === peg$FAILED) {
                      s7 = peg$parsesuperlative();
                    }
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c565(s2, s4, s7);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        peg$silentFails++;
        s2 = peg$parsemetaAssertion();
        peg$silentFails--;
        if (s2 === peg$FAILED) {
          s1 = void 0;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseitem();
          if (s2 !== peg$FAILED) {
            s3 = peg$parse_();
            if (s3 !== peg$FAILED) {
              s4 = peg$parseverb();
              if (s4 !== peg$FAILED) {
                s5 = peg$parse_();
                if (s5 !== peg$FAILED) {
                  s6 = [];
                  s7 = peg$parsecomplement();
                  while (s7 !== peg$FAILED) {
                    s6.push(s7);
                    s7 = peg$parsecomplement();
                  }
                  if (s6 !== peg$FAILED) {
                    s7 = peg$parse_();
                    if (s7 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c566(s2, s4, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$parsemetaAssertion();
          if (s0 === peg$FAILED) {
            s0 = peg$parserule();
            if (s0 === peg$FAILED) {
              s0 = peg$parsemetaQuestion();
              if (s0 === peg$FAILED) {
                s0 = peg$parsewhquestion();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseexistentialQuestion();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parseauxQuestion();
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parserule() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c567) {
        s1 = peg$c567;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c568); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsesentence();
          if (s3 === peg$FAILED) {
            s3 = peg$parseitem();
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c569) {
                s5 = peg$c569;
                peg$currPos += 4;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c570); }
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parsesentence();
                  if (s7 === peg$FAILED) {
                    s7 = peg$parseitem();
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      if (input.substr(peg$currPos, 4) === peg$c571) {
                        s9 = peg$c571;
                        peg$currPos += 4;
                      } else {
                        s9 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c572); }
                      }
                      if (s9 !== peg$FAILED) {
                        s10 = peg$parse_();
                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsesentence();
                          if (s11 === peg$FAILED) {
                            s11 = peg$parseitem();
                          }
                          if (s11 !== peg$FAILED) {
                            s12 = peg$parse_();
                            if (s12 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c573(s3, s7, s11);
                              s0 = s1;
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 2) === peg$c567) {
          s1 = peg$c567;
          peg$currPos += 2;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c568); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parsesentence();
            if (s3 === peg$FAILED) {
              s3 = peg$parseitem();
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                if (input.substr(peg$currPos, 4) === peg$c569) {
                  s5 = peg$c569;
                  peg$currPos += 4;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c570); }
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parse_();
                  if (s6 !== peg$FAILED) {
                    s7 = peg$parsesentence();
                    if (s7 === peg$FAILED) {
                      s7 = peg$parseitem();
                    }
                    if (s7 !== peg$FAILED) {
                      s8 = peg$parse_();
                      if (s8 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c574(s3, s7);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parseauxQuestion() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseaux();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsesentence();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c575(s1, s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseexistentialQuestion() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 9) === peg$c576) {
        s1 = peg$c576;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c577); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 10) === peg$c578) {
          s1 = peg$c578;
          peg$currPos += 10;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c579); }
        }
        if (s1 === peg$FAILED) {
          if (input.substr(peg$currPos, 12) === peg$c580) {
            s1 = peg$c580;
            peg$currPos += 12;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c581); }
          }
          if (s1 === peg$FAILED) {
            if (input.substr(peg$currPos, 13) === peg$c582) {
              s1 = peg$c582;
              peg$currPos += 13;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c583); }
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseitem();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parsecomplement();
              while (s6 !== peg$FAILED) {
                s5.push(s6);
                s6 = peg$parsecomplement();
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c584(s1, s3, s5);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsewh() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c585) {
        s2 = peg$c585;
        peg$currPos += 4;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c586); }
      }
      if (s2 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c587) {
          s2 = peg$c587;
          peg$currPos += 4;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c588); }
        }
        if (s2 === peg$FAILED) {
          if (input.substr(peg$currPos, 5) === peg$c17) {
            s2 = peg$c17;
            peg$currPos += 5;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c18); }
          }
          if (s2 === peg$FAILED) {
            if (input.substr(peg$currPos, 5) === peg$c11) {
              s2 = peg$c11;
              peg$currPos += 5;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c12); }
            }
            if (s2 === peg$FAILED) {
              if (input.substr(peg$currPos, 3) === peg$c13) {
                s2 = peg$c13;
                peg$currPos += 3;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c14); }
              }
              if (s2 === peg$FAILED) {
                if (input.substr(peg$currPos, 4) === peg$c589) {
                  s2 = peg$c589;
                  peg$currPos += 4;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c590); }
                }
                if (s2 === peg$FAILED) {
                  if (input.substr(peg$currPos, 5) === peg$c15) {
                    s2 = peg$c15;
                    peg$currPos += 5;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c16); }
                  }
                  if (s2 === peg$FAILED) {
                    if (input.substr(peg$currPos, 3) === peg$c591) {
                      s2 = peg$c591;
                      peg$currPos += 3;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c592); }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 3) === peg$c593) {
                        s2 = peg$c593;
                        peg$currPos += 3;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c594); }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 7) === peg$c595) {
                          s2 = peg$c595;
                          peg$currPos += 7;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c596); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 8) === peg$c597) {
                            s2 = peg$c597;
                            peg$currPos += 8;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c598); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 8) === peg$c599) {
                              s2 = peg$c599;
                              peg$currPos += 8;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c600); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 8) === peg$c601) {
                                s2 = peg$c601;
                                peg$currPos += 8;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c602); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 7) === peg$c603) {
                                  s2 = peg$c603;
                                  peg$currPos += 7;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c604); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 8) === peg$c605) {
                                    s2 = peg$c605;
                                    peg$currPos += 8;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c606); }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c607(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsewhquestion() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;

      s0 = peg$currPos;
      s1 = peg$parsewh();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseitem();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseaux();
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsecomplement();
                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsecomplement();
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      s9 = peg$parseauxrest();
                      if (s9 === peg$FAILED) {
                        s9 = null;
                      }
                      if (s9 !== peg$FAILED) {
                        s10 = peg$parse_();
                        if (s10 !== peg$FAILED) {
                          s11 = peg$parseverb();
                          if (s11 === peg$FAILED) {
                            s11 = null;
                          }
                          if (s11 !== peg$FAILED) {
                            s12 = peg$parse_();
                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsecomplementLink();
                              if (s13 === peg$FAILED) {
                                s13 = null;
                              }
                              if (s13 !== peg$FAILED) {
                                s14 = peg$parse_();
                                if (s14 !== peg$FAILED) {
                                  peg$savedPos = s0;
                                  s1 = peg$c608(s1, s3, s5, s7, s9, s11, s13);
                                  s0 = s1;
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsewh();
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseaux();
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s5 = peg$parsecomplement();
                if (s5 !== peg$FAILED) {
                  s6 = peg$parse_();
                  if (s6 !== peg$FAILED) {
                    s7 = peg$parseauxrest();
                    if (s7 === peg$FAILED) {
                      s7 = null;
                    }
                    if (s7 !== peg$FAILED) {
                      s8 = peg$parse_();
                      if (s8 !== peg$FAILED) {
                        s9 = peg$parseverb();
                        if (s9 === peg$FAILED) {
                          s9 = null;
                        }
                        if (s9 !== peg$FAILED) {
                          s10 = peg$parse_();
                          if (s10 !== peg$FAILED) {
                            s11 = peg$parsecomplementLink();
                            if (s11 === peg$FAILED) {
                              s11 = null;
                            }
                            if (s11 !== peg$FAILED) {
                              s12 = peg$parse_();
                              if (s12 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c609(s1, s3, s5, s7, s9, s11);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parsewh();
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseexistentialQuestion();
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c610(s1, s3);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parsewh();
            if (s1 !== peg$FAILED) {
              s2 = peg$parse_();
              if (s2 !== peg$FAILED) {
                s3 = peg$parsesentence();
                if (s3 !== peg$FAILED) {
                  s4 = peg$parse_();
                  if (s4 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c611(s1, s3);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
      }

      return s0;
    }

    function peg$parsecomplementLink() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c612) {
        s1 = peg$c612;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c613); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c614) {
          s1 = peg$c614;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c615); }
        }
        if (s1 === peg$FAILED) {
          if (input.substr(peg$currPos, 2) === peg$c616) {
            s1 = peg$c616;
            peg$currPos += 2;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c617); }
          }
          if (s1 === peg$FAILED) {
            if (input.substr(peg$currPos, 2) === peg$c618) {
              s1 = peg$c618;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c619); }
            }
            if (s1 === peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c620) {
                s1 = peg$c620;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c621); }
              }
              if (s1 === peg$FAILED) {
                if (input.substr(peg$currPos, 4) === peg$c622) {
                  s1 = peg$c622;
                  peg$currPos += 4;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c623); }
                }
                if (s1 === peg$FAILED) {
                  if (input.substr(peg$currPos, 4) === peg$c624) {
                    s1 = peg$c624;
                    peg$currPos += 4;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c625); }
                  }
                  if (s1 === peg$FAILED) {
                    if (input.substr(peg$currPos, 4) === peg$c626) {
                      s1 = peg$c626;
                      peg$currPos += 4;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c627); }
                    }
                    if (s1 === peg$FAILED) {
                      if (input.substr(peg$currPos, 5) === peg$c628) {
                        s1 = peg$c628;
                        peg$currPos += 5;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c629); }
                      }
                      if (s1 === peg$FAILED) {
                        if (input.substr(peg$currPos, 7) === peg$c630) {
                          s1 = peg$c630;
                          peg$currPos += 7;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c631); }
                        }
                        if (s1 === peg$FAILED) {
                          if (input.substr(peg$currPos, 2) === peg$c372) {
                            s1 = peg$c372;
                            peg$currPos += 2;
                          } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c373); }
                          }
                          if (s1 === peg$FAILED) {
                            if (input.substr(peg$currPos, 4) === peg$c632) {
                              s1 = peg$c632;
                              peg$currPos += 4;
                            } else {
                              s1 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c633); }
                            }
                            if (s1 === peg$FAILED) {
                              if (input.substr(peg$currPos, 5) === peg$c634) {
                                s1 = peg$c634;
                                peg$currPos += 5;
                              } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c635); }
                              }
                              if (s1 === peg$FAILED) {
                                if (input.substr(peg$currPos, 6) === peg$c636) {
                                  s1 = peg$c636;
                                  peg$currPos += 6;
                                } else {
                                  s1 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c637); }
                                }
                                if (s1 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 7) === peg$c638) {
                                    s1 = peg$c638;
                                    peg$currPos += 7;
                                  } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c639); }
                                  }
                                  if (s1 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 2) === peg$c640) {
                                      s1 = peg$c640;
                                      peg$currPos += 2;
                                    } else {
                                      s1 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c641); }
                                    }
                                    if (s1 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 2) === peg$c642) {
                                        s1 = peg$c642;
                                        peg$currPos += 2;
                                      } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c643); }
                                      }
                                      if (s1 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 3) === peg$c644) {
                                          s1 = peg$c644;
                                          peg$currPos += 3;
                                        } else {
                                          s1 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c645); }
                                        }
                                        if (s1 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 2) === peg$c646) {
                                            s1 = peg$c646;
                                            peg$currPos += 2;
                                          } else {
                                            s1 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c647); }
                                          }
                                          if (s1 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 4) === peg$c648) {
                                              s1 = peg$c648;
                                              peg$currPos += 4;
                                            } else {
                                              s1 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c649); }
                                            }
                                            if (s1 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 4) === peg$c650) {
                                                s1 = peg$c650;
                                                peg$currPos += 4;
                                              } else {
                                                s1 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c651); }
                                              }
                                              if (s1 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 5) === peg$c652) {
                                                  s1 = peg$c652;
                                                  peg$currPos += 5;
                                                } else {
                                                  s1 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c653); }
                                                }
                                                if (s1 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 6) === peg$c654) {
                                                    s1 = peg$c654;
                                                    peg$currPos += 6;
                                                  } else {
                                                    s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c655); }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }

      return s0;
    }

    function peg$parsecomplement() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c10); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsesentence();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c656(s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 5) === peg$c657) {
          s1 = peg$c657;
          peg$currPos += 5;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c658); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parsesentence();
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c659(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 5) === peg$c660) {
            s1 = peg$c660;
            peg$currPos += 5;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c661); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parsesentence();
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c662(s3);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 6) === peg$c663) {
              s1 = peg$c663;
              peg$currPos += 6;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c664); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parse_();
              if (s2 !== peg$FAILED) {
                s3 = peg$parseitem();
                if (s3 !== peg$FAILED) {
                  s4 = peg$parse_();
                  if (s4 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c665(s3);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$parsecomplementLink();
              if (s1 !== peg$FAILED) {
                s2 = peg$parse_();
                if (s2 !== peg$FAILED) {
                  s3 = peg$parseverb();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseitem();
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parse_();
                    if (s4 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c666(s1, s3);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parseitem();
                if (s1 !== peg$FAILED) {
                  s2 = peg$parse_();
                  if (s2 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c667(s1);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseadverb() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$currPos;
      if (input.substr(peg$currPos, 12) === peg$c668) {
        s2 = peg$c668;
        peg$currPos += 12;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c669); }
      }
      if (s2 === peg$FAILED) {
        if (input.substr(peg$currPos, 8) === peg$c670) {
          s2 = peg$c670;
          peg$currPos += 8;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c671); }
        }
        if (s2 === peg$FAILED) {
          if (input.substr(peg$currPos, 6) === peg$c672) {
            s2 = peg$c672;
            peg$currPos += 6;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c673); }
          }
          if (s2 === peg$FAILED) {
            if (input.substr(peg$currPos, 9) === peg$c674) {
              s2 = peg$c674;
              peg$currPos += 9;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c675); }
            }
            if (s2 === peg$FAILED) {
              if (input.substr(peg$currPos, 11) === peg$c676) {
                s2 = peg$c676;
                peg$currPos += 11;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c677); }
              }
              if (s2 === peg$FAILED) {
                if (input.substr(peg$currPos, 7) === peg$c678) {
                  s2 = peg$c678;
                  peg$currPos += 7;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c679); }
                }
                if (s2 === peg$FAILED) {
                  if (input.substr(peg$currPos, 9) === peg$c680) {
                    s2 = peg$c680;
                    peg$currPos += 9;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c681); }
                  }
                  if (s2 === peg$FAILED) {
                    if (input.substr(peg$currPos, 9) === peg$c682) {
                      s2 = peg$c682;
                      peg$currPos += 9;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c683); }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 6) === peg$c684) {
                        s2 = peg$c684;
                        peg$currPos += 6;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c685); }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 10) === peg$c686) {
                          s2 = peg$c686;
                          peg$currPos += 10;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c687); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 7) === peg$c688) {
                            s2 = peg$c688;
                            peg$currPos += 7;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c689); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 10) === peg$c690) {
                              s2 = peg$c690;
                              peg$currPos += 10;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c691); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 9) === peg$c692) {
                                s2 = peg$c692;
                                peg$currPos += 9;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c693); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 7) === peg$c694) {
                                  s2 = peg$c694;
                                  peg$currPos += 7;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c695); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 7) === peg$c696) {
                                    s2 = peg$c696;
                                    peg$currPos += 7;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c697); }
                                  }
                                  if (s2 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 9) === peg$c698) {
                                      s2 = peg$c698;
                                      peg$currPos += 9;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c699); }
                                    }
                                    if (s2 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 8) === peg$c700) {
                                        s2 = peg$c700;
                                        peg$currPos += 8;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c701); }
                                      }
                                      if (s2 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 11) === peg$c702) {
                                          s2 = peg$c702;
                                          peg$currPos += 11;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c703); }
                                        }
                                        if (s2 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 6) === peg$c704) {
                                            s2 = peg$c704;
                                            peg$currPos += 6;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c705); }
                                          }
                                          if (s2 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 12) === peg$c706) {
                                              s2 = peg$c706;
                                              peg$currPos += 12;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c707); }
                                            }
                                            if (s2 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 9) === peg$c708) {
                                                s2 = peg$c708;
                                                peg$currPos += 9;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c709); }
                                              }
                                              if (s2 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 5) === peg$c710) {
                                                  s2 = peg$c710;
                                                  peg$currPos += 5;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c711); }
                                                }
                                                if (s2 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 8) === peg$c712) {
                                                    s2 = peg$c712;
                                                    peg$currPos += 8;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c713); }
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 7) === peg$c714) {
                                                      s2 = peg$c714;
                                                      peg$currPos += 7;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c715); }
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 8) === peg$c716) {
                                                        s2 = peg$c716;
                                                        peg$currPos += 8;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c717); }
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 7) === peg$c718) {
                                                          s2 = peg$c718;
                                                          peg$currPos += 7;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c719); }
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 9) === peg$c720) {
                                                            s2 = peg$c720;
                                                            peg$currPos += 9;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c721); }
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 6) === peg$c722) {
                                                              s2 = peg$c722;
                                                              peg$currPos += 6;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c723); }
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 6) === peg$c724) {
                                                                s2 = peg$c724;
                                                                peg$currPos += 6;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c725); }
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 8) === peg$c726) {
                                                                  s2 = peg$c726;
                                                                  peg$currPos += 8;
                                                                } else {
                                                                  s2 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c727); }
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 10) === peg$c728) {
                                                                    s2 = peg$c728;
                                                                    peg$currPos += 10;
                                                                  } else {
                                                                    s2 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c729); }
                                                                  }
                                                                  if (s2 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 12) === peg$c730) {
                                                                      s2 = peg$c730;
                                                                      peg$currPos += 12;
                                                                    } else {
                                                                      s2 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c731); }
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 13) === peg$c732) {
                                                                        s2 = peg$c732;
                                                                        peg$currPos += 13;
                                                                      } else {
                                                                        s2 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c733); }
                                                                      }
                                                                      if (s2 === peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 8) === peg$c734) {
                                                                          s2 = peg$c734;
                                                                          peg$currPos += 8;
                                                                        } else {
                                                                          s2 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c735); }
                                                                        }
                                                                        if (s2 === peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 11) === peg$c736) {
                                                                            s2 = peg$c736;
                                                                            peg$currPos += 11;
                                                                          } else {
                                                                            s2 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c737); }
                                                                          }
                                                                          if (s2 === peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 7) === peg$c738) {
                                                                              s2 = peg$c738;
                                                                              peg$currPos += 7;
                                                                            } else {
                                                                              s2 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c739); }
                                                                            }
                                                                            if (s2 === peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 9) === peg$c740) {
                                                                                s2 = peg$c740;
                                                                                peg$currPos += 9;
                                                                              } else {
                                                                                s2 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c741); }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c563(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseverb() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseaux();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parseadverb();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parseadverb();
            }
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseauxrest();
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseverb();
                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c742(s1, s3, s5, s7);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        s2 = peg$parseadverb();
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            s2 = peg$parseadverb();
          }
        } else {
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseverb();
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c743(s1, s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseauxiliary();
          if (s1 === peg$FAILED) {
            s1 = peg$parseaux();
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseverb();
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c744(s1, s3);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parseauxiliary();
            if (s1 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c563(s1);
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$parseaux();
              if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c563(s1);
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$currPos;
                if (input.substr(peg$currPos, 6) === peg$c745) {
                  s2 = peg$c745;
                  peg$currPos += 6;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c746); }
                }
                if (s2 === peg$FAILED) {
                  if (input.substr(peg$currPos, 4) === peg$c747) {
                    s2 = peg$c747;
                    peg$currPos += 4;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c748); }
                  }
                  if (s2 === peg$FAILED) {
                    if (input.substr(peg$currPos, 3) === peg$c749) {
                      s2 = peg$c749;
                      peg$currPos += 3;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c750); }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 4) === peg$c751) {
                        s2 = peg$c751;
                        peg$currPos += 4;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c752); }
                      }
                    }
                  }
                }
                if (s2 === peg$FAILED) {
                  if (input.substr(peg$currPos, 7) === peg$c753) {
                    s2 = peg$c753;
                    peg$currPos += 7;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c754); }
                  }
                  if (s2 === peg$FAILED) {
                    if (input.substr(peg$currPos, 4) === peg$c755) {
                      s2 = peg$c755;
                      peg$currPos += 4;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c756); }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 3) === peg$c757) {
                        s2 = peg$c757;
                        peg$currPos += 3;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c758); }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 6) === peg$c759) {
                          s2 = peg$c759;
                          peg$currPos += 6;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c760); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 3) === peg$c761) {
                            s2 = peg$c761;
                            peg$currPos += 3;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c762); }
                          }
                        }
                      }
                    }
                  }
                  if (s2 === peg$FAILED) {
                    if (input.substr(peg$currPos, 6) === peg$c763) {
                      s2 = peg$c763;
                      peg$currPos += 6;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c764); }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 5) === peg$c765) {
                        s2 = peg$c765;
                        peg$currPos += 5;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c766); }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 4) === peg$c767) {
                          s2 = peg$c767;
                          peg$currPos += 4;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c768); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 4) === peg$c769) {
                            s2 = peg$c769;
                            peg$currPos += 4;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c770); }
                          }
                        }
                      }
                    }
                    if (s2 === peg$FAILED) {
                      if (input.substr(peg$currPos, 5) === peg$c771) {
                        s2 = peg$c771;
                        peg$currPos += 5;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c772); }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 4) === peg$c773) {
                          s2 = peg$c773;
                          peg$currPos += 4;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c774); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 4) === peg$c775) {
                            s2 = peg$c775;
                            peg$currPos += 4;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c776); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 2) === peg$c777) {
                              s2 = peg$c777;
                              peg$currPos += 2;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c778); }
                            }
                          }
                        }
                      }
                      if (s2 === peg$FAILED) {
                        if (input.substr(peg$currPos, 7) === peg$c779) {
                          s2 = peg$c779;
                          peg$currPos += 7;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c780); }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 5) === peg$c781) {
                            s2 = peg$c781;
                            peg$currPos += 5;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c782); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 5) === peg$c783) {
                              s2 = peg$c783;
                              peg$currPos += 5;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c784); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 4) === peg$c785) {
                                s2 = peg$c785;
                                peg$currPos += 4;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c786); }
                              }
                            }
                          }
                        }
                        if (s2 === peg$FAILED) {
                          if (input.substr(peg$currPos, 5) === peg$c787) {
                            s2 = peg$c787;
                            peg$currPos += 5;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c788); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 6) === peg$c789) {
                              s2 = peg$c789;
                              peg$currPos += 6;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c790); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 5) === peg$c791) {
                                s2 = peg$c791;
                                peg$currPos += 5;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c792); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 4) === peg$c793) {
                                  s2 = peg$c793;
                                  peg$currPos += 4;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c794); }
                                }
                              }
                            }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 4) === peg$c795) {
                              s2 = peg$c795;
                              peg$currPos += 4;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c796); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 6) === peg$c797) {
                                s2 = peg$c797;
                                peg$currPos += 6;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c798); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 4) === peg$c799) {
                                  s2 = peg$c799;
                                  peg$currPos += 4;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c800); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 3) === peg$c801) {
                                    s2 = peg$c801;
                                    peg$currPos += 3;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c802); }
                                  }
                                }
                              }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 5) === peg$c803) {
                                s2 = peg$c803;
                                peg$currPos += 5;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c804); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 4) === peg$c805) {
                                  s2 = peg$c805;
                                  peg$currPos += 4;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c806); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 6) === peg$c807) {
                                    s2 = peg$c807;
                                    peg$currPos += 6;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c808); }
                                  }
                                }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 6) === peg$c809) {
                                  s2 = peg$c809;
                                  peg$currPos += 6;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c810); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 8) === peg$c811) {
                                    s2 = peg$c811;
                                    peg$currPos += 8;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c812); }
                                  }
                                  if (s2 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 5) === peg$c813) {
                                      s2 = peg$c813;
                                      peg$currPos += 5;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c814); }
                                    }
                                    if (s2 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 7) === peg$c815) {
                                        s2 = peg$c815;
                                        peg$currPos += 7;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c816); }
                                      }
                                    }
                                  }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 5) === peg$c817) {
                                    s2 = peg$c817;
                                    peg$currPos += 5;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c818); }
                                  }
                                  if (s2 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 7) === peg$c819) {
                                      s2 = peg$c819;
                                      peg$currPos += 7;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c820); }
                                    }
                                    if (s2 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 6) === peg$c821) {
                                        s2 = peg$c821;
                                        peg$currPos += 6;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c822); }
                                      }
                                      if (s2 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 4) === peg$c823) {
                                          s2 = peg$c823;
                                          peg$currPos += 4;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c824); }
                                        }
                                      }
                                    }
                                  }
                                  if (s2 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 5) === peg$c825) {
                                      s2 = peg$c825;
                                      peg$currPos += 5;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c826); }
                                    }
                                    if (s2 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 7) === peg$c827) {
                                        s2 = peg$c827;
                                        peg$currPos += 7;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c828); }
                                      }
                                      if (s2 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 6) === peg$c829) {
                                          s2 = peg$c829;
                                          peg$currPos += 6;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c830); }
                                        }
                                        if (s2 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 4) === peg$c831) {
                                            s2 = peg$c831;
                                            peg$currPos += 4;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c832); }
                                          }
                                        }
                                      }
                                    }
                                    if (s2 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 5) === peg$c833) {
                                        s2 = peg$c833;
                                        peg$currPos += 5;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c834); }
                                      }
                                      if (s2 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 6) === peg$c835) {
                                          s2 = peg$c835;
                                          peg$currPos += 6;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c836); }
                                        }
                                        if (s2 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 5) === peg$c837) {
                                            s2 = peg$c837;
                                            peg$currPos += 5;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c838); }
                                          }
                                          if (s2 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 4) === peg$c839) {
                                              s2 = peg$c839;
                                              peg$currPos += 4;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c840); }
                                            }
                                          }
                                        }
                                      }
                                      if (s2 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 4) === peg$c841) {
                                          s2 = peg$c841;
                                          peg$currPos += 4;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c842); }
                                        }
                                        if (s2 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 5) === peg$c843) {
                                            s2 = peg$c843;
                                            peg$currPos += 5;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c844); }
                                          }
                                          if (s2 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 4) === peg$c845) {
                                              s2 = peg$c845;
                                              peg$currPos += 4;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c846); }
                                            }
                                            if (s2 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 3) === peg$c847) {
                                                s2 = peg$c847;
                                                peg$currPos += 3;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c848); }
                                              }
                                            }
                                          }
                                        }
                                        if (s2 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 5) === peg$c849) {
                                            s2 = peg$c849;
                                            peg$currPos += 5;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c850); }
                                          }
                                          if (s2 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 7) === peg$c851) {
                                              s2 = peg$c851;
                                              peg$currPos += 7;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c852); }
                                            }
                                            if (s2 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 5) === peg$c853) {
                                                s2 = peg$c853;
                                                peg$currPos += 5;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c854); }
                                              }
                                              if (s2 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 4) === peg$c855) {
                                                  s2 = peg$c855;
                                                  peg$currPos += 4;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c856); }
                                                }
                                              }
                                            }
                                          }
                                          if (s2 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 5) === peg$c857) {
                                              s2 = peg$c857;
                                              peg$currPos += 5;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c858); }
                                            }
                                            if (s2 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 7) === peg$c859) {
                                                s2 = peg$c859;
                                                peg$currPos += 7;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c860); }
                                              }
                                              if (s2 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 4) === peg$c861) {
                                                  s2 = peg$c861;
                                                  peg$currPos += 4;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c862); }
                                                }
                                                if (s2 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 4) === peg$c863) {
                                                    s2 = peg$c863;
                                                    peg$currPos += 4;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c864); }
                                                  }
                                                }
                                              }
                                            }
                                            if (s2 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 4) === peg$c865) {
                                                s2 = peg$c865;
                                                peg$currPos += 4;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c866); }
                                              }
                                              if (s2 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 6) === peg$c867) {
                                                  s2 = peg$c867;
                                                  peg$currPos += 6;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c868); }
                                                }
                                                if (s2 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 5) === peg$c869) {
                                                    s2 = peg$c869;
                                                    peg$currPos += 5;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c870); }
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 3) === peg$c871) {
                                                      s2 = peg$c871;
                                                      peg$currPos += 3;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c872); }
                                                    }
                                                  }
                                                }
                                              }
                                              if (s2 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 5) === peg$c290) {
                                                  s2 = peg$c290;
                                                  peg$currPos += 5;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c291); }
                                                }
                                                if (s2 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 7) === peg$c873) {
                                                    s2 = peg$c873;
                                                    peg$currPos += 7;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c874); }
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 6) === peg$c875) {
                                                      s2 = peg$c875;
                                                      peg$currPos += 6;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c876); }
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 4) === peg$c292) {
                                                        s2 = peg$c292;
                                                        peg$currPos += 4;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c293); }
                                                      }
                                                    }
                                                  }
                                                }
                                                if (s2 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 5) === peg$c877) {
                                                    s2 = peg$c877;
                                                    peg$currPos += 5;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c878); }
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 7) === peg$c879) {
                                                      s2 = peg$c879;
                                                      peg$currPos += 7;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c880); }
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 6) === peg$c881) {
                                                        s2 = peg$c881;
                                                        peg$currPos += 6;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c882); }
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 4) === peg$c883) {
                                                          s2 = peg$c883;
                                                          peg$currPos += 4;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c884); }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 5) === peg$c885) {
                                                      s2 = peg$c885;
                                                      peg$currPos += 5;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c886); }
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 7) === peg$c887) {
                                                        s2 = peg$c887;
                                                        peg$currPos += 7;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c888); }
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 4) === peg$c889) {
                                                          s2 = peg$c889;
                                                          peg$currPos += 4;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c890); }
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 4) === peg$c891) {
                                                            s2 = peg$c891;
                                                            peg$currPos += 4;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c892); }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 5) === peg$c893) {
                                                        s2 = peg$c893;
                                                        peg$currPos += 5;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c894); }
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 6) === peg$c895) {
                                                          s2 = peg$c895;
                                                          peg$currPos += 6;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c896); }
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 5) === peg$c897) {
                                                            s2 = peg$c897;
                                                            peg$currPos += 5;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c898); }
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 3) === peg$c899) {
                                                              s2 = peg$c899;
                                                              peg$currPos += 3;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c900); }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 6) === peg$c901) {
                                                          s2 = peg$c901;
                                                          peg$currPos += 6;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c902); }
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 5) === peg$c903) {
                                                            s2 = peg$c903;
                                                            peg$currPos += 5;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c904); }
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 7) === peg$c905) {
                                                              s2 = peg$c905;
                                                              peg$currPos += 7;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c906); }
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 4) === peg$c907) {
                                                                s2 = peg$c907;
                                                                peg$currPos += 4;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c908); }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 5) === peg$c909) {
                                                            s2 = peg$c909;
                                                            peg$currPos += 5;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c910); }
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 7) === peg$c911) {
                                                              s2 = peg$c911;
                                                              peg$currPos += 7;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c912); }
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 6) === peg$c913) {
                                                                s2 = peg$c913;
                                                                peg$currPos += 6;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c914); }
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 4) === peg$c915) {
                                                                  s2 = peg$c915;
                                                                  peg$currPos += 4;
                                                                } else {
                                                                  s2 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c916); }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 8) === peg$c917) {
                                                              s2 = peg$c917;
                                                              peg$currPos += 8;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c918); }
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 9) === peg$c919) {
                                                                s2 = peg$c919;
                                                                peg$currPos += 9;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c920); }
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 8) === peg$c921) {
                                                                  s2 = peg$c921;
                                                                  peg$currPos += 8;
                                                                } else {
                                                                  s2 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c922); }
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 7) === peg$c923) {
                                                                    s2 = peg$c923;
                                                                    peg$currPos += 7;
                                                                  } else {
                                                                    s2 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c924); }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 2) === peg$c925) {
                                                                s2 = peg$c925;
                                                                peg$currPos += 2;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c926); }
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 3) === peg$c927) {
                                                                  s2 = peg$c927;
                                                                  peg$currPos += 3;
                                                                } else {
                                                                  s2 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c928); }
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 2) === peg$c929) {
                                                                    s2 = peg$c929;
                                                                    peg$currPos += 2;
                                                                  } else {
                                                                    s2 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c930); }
                                                                  }
                                                                  if (s2 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 5) === peg$c931) {
                                                                      s2 = peg$c931;
                                                                      peg$currPos += 5;
                                                                    } else {
                                                                      s2 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c932); }
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 4) === peg$c933) {
                                                                        s2 = peg$c933;
                                                                        peg$currPos += 4;
                                                                      } else {
                                                                        s2 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c934); }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                if (s2 !== peg$FAILED) {
                  s1 = input.substring(s1, peg$currPos);
                } else {
                  s1 = s2;
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$parse_();
                  if (s2 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c935(s1);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseauxiliary() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseaux();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseauxrest();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c936(s1, s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseaux() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (input.substr(peg$currPos, 9) === peg$c937) {
        s3 = peg$c937;
        peg$currPos += 9;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c938); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = peg$currPos;
        if (input.substr(peg$currPos, 5) === peg$c939) {
          s3 = peg$c939;
          peg$currPos += 5;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c940); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          if (input.substr(peg$currPos, 7) === peg$c941) {
            s3 = peg$c941;
            peg$currPos += 7;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c942); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            if (input.substr(peg$currPos, 3) === peg$c943) {
              s3 = peg$c943;
              peg$currPos += 3;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c944); }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s3 = [s3, s4];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              if (input.substr(peg$currPos, 8) === peg$c945) {
                s3 = peg$c945;
                peg$currPos += 8;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c946); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s3 = [s3, s4];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 === peg$FAILED) {
                s2 = peg$currPos;
                if (input.substr(peg$currPos, 4) === peg$c947) {
                  s3 = peg$c947;
                  peg$currPos += 4;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c948); }
                }
                if (s3 !== peg$FAILED) {
                  s4 = peg$parse_();
                  if (s4 !== peg$FAILED) {
                    s3 = [s3, s4];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 === peg$FAILED) {
                  s2 = peg$currPos;
                  if (input.substr(peg$currPos, 7) === peg$c949) {
                    s3 = peg$c949;
                    peg$currPos += 7;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c950); }
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parse_();
                    if (s4 !== peg$FAILED) {
                      s3 = [s3, s4];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 === peg$FAILED) {
                    s2 = peg$currPos;
                    if (input.substr(peg$currPos, 3) === peg$c951) {
                      s3 = peg$c951;
                      peg$currPos += 3;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c952); }
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parse_();
                      if (s4 !== peg$FAILED) {
                        s3 = [s3, s4];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 === peg$FAILED) {
                      s2 = peg$currPos;
                      if (input.substr(peg$currPos, 3) === peg$c953) {
                        s3 = peg$c953;
                        peg$currPos += 3;
                      } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c954); }
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parse_();
                        if (s4 !== peg$FAILED) {
                          s3 = [s3, s4];
                          s2 = s3;
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 === peg$FAILED) {
                        s2 = peg$currPos;
                        if (input.substr(peg$currPos, 9) === peg$c955) {
                          s3 = peg$c955;
                          peg$currPos += 9;
                        } else {
                          s3 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c956); }
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parse_();
                          if (s4 !== peg$FAILED) {
                            s3 = [s3, s4];
                            s2 = s3;
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 === peg$FAILED) {
                          s2 = peg$currPos;
                          if (input.substr(peg$currPos, 5) === peg$c957) {
                            s3 = peg$c957;
                            peg$currPos += 5;
                          } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c958); }
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parse_();
                            if (s4 !== peg$FAILED) {
                              s3 = [s3, s4];
                              s2 = s3;
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                          if (s2 === peg$FAILED) {
                            s2 = peg$currPos;
                            if (input.substr(peg$currPos, 7) === peg$c959) {
                              s3 = peg$c959;
                              peg$currPos += 7;
                            } else {
                              s3 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c960); }
                            }
                            if (s3 !== peg$FAILED) {
                              s4 = peg$parse_();
                              if (s4 !== peg$FAILED) {
                                s3 = [s3, s4];
                                s2 = s3;
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                            if (s2 === peg$FAILED) {
                              s2 = peg$currPos;
                              if (input.substr(peg$currPos, 4) === peg$c961) {
                                s3 = peg$c961;
                                peg$currPos += 4;
                              } else {
                                s3 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c962); }
                              }
                              if (s3 !== peg$FAILED) {
                                s4 = peg$parse_();
                                if (s4 !== peg$FAILED) {
                                  s3 = [s3, s4];
                                  s2 = s3;
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                              if (s2 === peg$FAILED) {
                                s2 = peg$currPos;
                                if (input.substr(peg$currPos, 11) === peg$c963) {
                                  s3 = peg$c963;
                                  peg$currPos += 11;
                                } else {
                                  s3 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c964); }
                                }
                                if (s3 !== peg$FAILED) {
                                  s4 = peg$parse_();
                                  if (s4 !== peg$FAILED) {
                                    s3 = [s3, s4];
                                    s2 = s3;
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                                if (s2 === peg$FAILED) {
                                  s2 = peg$currPos;
                                  if (input.substr(peg$currPos, 7) === peg$c965) {
                                    s3 = peg$c965;
                                    peg$currPos += 7;
                                  } else {
                                    s3 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c966); }
                                  }
                                  if (s3 !== peg$FAILED) {
                                    s4 = peg$parse_();
                                    if (s4 !== peg$FAILED) {
                                      s3 = [s3, s4];
                                      s2 = s3;
                                    } else {
                                      peg$currPos = s2;
                                      s2 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                  if (s2 === peg$FAILED) {
                                    s2 = peg$currPos;
                                    if (input.substr(peg$currPos, 8) === peg$c967) {
                                      s3 = peg$c967;
                                      peg$currPos += 8;
                                    } else {
                                      s3 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c968); }
                                    }
                                    if (s3 !== peg$FAILED) {
                                      s4 = peg$parse_();
                                      if (s4 !== peg$FAILED) {
                                        s3 = [s3, s4];
                                        s2 = s3;
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s2;
                                      s2 = peg$FAILED;
                                    }
                                    if (s2 === peg$FAILED) {
                                      s2 = peg$currPos;
                                      if (input.substr(peg$currPos, 4) === peg$c969) {
                                        s3 = peg$c969;
                                        peg$currPos += 4;
                                      } else {
                                        s3 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c970); }
                                      }
                                      if (s3 !== peg$FAILED) {
                                        s4 = peg$parse_();
                                        if (s4 !== peg$FAILED) {
                                          s3 = [s3, s4];
                                          s2 = s3;
                                        } else {
                                          peg$currPos = s2;
                                          s2 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c971(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseauxrest() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c972) {
        s3 = peg$c972;
        peg$currPos += 6;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c973); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = peg$currPos;
        if (input.substr(peg$currPos, 16) === peg$c974) {
          s3 = peg$c974;
          peg$currPos += 16;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c975); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          if (input.substr(peg$currPos, 12) === peg$c976) {
            s3 = peg$c976;
            peg$currPos += 12;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c977); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            if (input.substr(peg$currPos, 14) === peg$c978) {
              s3 = peg$c978;
              peg$currPos += 14;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c979); }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s3 = [s3, s4];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              if (input.substr(peg$currPos, 11) === peg$c980) {
                s3 = peg$c980;
                peg$currPos += 11;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c981); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s3 = [s3, s4];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 === peg$FAILED) {
                s2 = peg$currPos;
                if (input.substr(peg$currPos, 3) === peg$c982) {
                  s3 = peg$c982;
                  peg$currPos += 3;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c983); }
                }
                if (s3 !== peg$FAILED) {
                  s4 = peg$parse_();
                  if (s4 !== peg$FAILED) {
                    s3 = [s3, s4];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 === peg$FAILED) {
                  s2 = peg$currPos;
                  if (input.substr(peg$currPos, 9) === peg$c984) {
                    s3 = peg$c984;
                    peg$currPos += 9;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c985); }
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parse_();
                    if (s4 !== peg$FAILED) {
                      s3 = [s3, s4];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 === peg$FAILED) {
                    s2 = peg$currPos;
                    if (input.substr(peg$currPos, 6) === peg$c986) {
                      s3 = peg$c986;
                      peg$currPos += 6;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c987); }
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parse_();
                      if (s4 !== peg$FAILED) {
                        s3 = [s3, s4];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 === peg$FAILED) {
                      s2 = peg$currPos;
                      if (input.substr(peg$currPos, 10) === peg$c988) {
                        s3 = peg$c988;
                        peg$currPos += 10;
                      } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c989); }
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parse_();
                        if (s4 !== peg$FAILED) {
                          s3 = [s3, s4];
                          s2 = s3;
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 === peg$FAILED) {
                        s2 = peg$currPos;
                        if (input.substr(peg$currPos, 7) === peg$c990) {
                          s3 = peg$c990;
                          peg$currPos += 7;
                        } else {
                          s3 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c991); }
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parse_();
                          if (s4 !== peg$FAILED) {
                            s3 = [s3, s4];
                            s2 = s3;
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 === peg$FAILED) {
                          s2 = peg$currPos;
                          if (input.substr(peg$currPos, 2) === peg$c992) {
                            s3 = peg$c992;
                            peg$currPos += 2;
                          } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c993); }
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parse_();
                            if (s4 !== peg$FAILED) {
                              s3 = [s3, s4];
                              s2 = s3;
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c994(s1);
      }
      s0 = s1;

      return s0;
    }



    var verbDef = {

        "saying": { infinitive: "to say", variant: "ing" },
        "says": { infinitive: "to say", variant: "third" },
        "say": { infinitive: "to say", variant: "default" },
        "said": { infinitive: "to say", variant: "ed" },
     
        "getting": { infinitive: "to get", variant: "ing" },
        "gets": { infinitive: "to get", variant: "third" },
        "get": { infinitive: "to get", variant: "default" },
        "gotten": { infinitive: "to get", variant: "ed" },
        "got": { infinitive: "to get", variant: "ed" },
     
        "making": { infinitive: "to make", variant: "ing" },
        "makes": { infinitive: "to make", variant: "third" },
        "make": { infinitive: "to make", variant: "default" },
        "made": { infinitive: "to make", variant: "ed" },
     
        "going": { infinitive: "to go", variant: "ing" },
        "goes": { infinitive: "to go", variant: "third" },
        "gone": { infinitive: "to go", variant: "ed" },
        "go": { infinitive: "to go", variant: "default" },
     
        "knowing": { infinitive: "to know", variant: "ing" },
        "knows": { infinitive: "to know", variant: "third" },
        "known": { infinitive: "to know", variant: "ed" },
        "know": { infinitive: "to know", variant: "default" },
     
        "takes": { infinitive: "to take", variant: "ing" },
        "taking": { infinitive: "to take", variant: "third" },
        "taken": { infinitive: "to take", variant: "ed" },
        "take": { infinitive: "to take", variant: "default" },
     
        "sees": { infinitive: "to see", variant: "ing" },
        "seeing": { infinitive: "to see", variant: "third" },
        "seen": { infinitive: "to see", variant: "ed" },
        "see": { infinitive: "to see", variant: "default" },
     
        "comes": { infinitive: "to come", variant: "third" },
        "come": { infinitive: "to come", variant: "default" },
        "coming": { infinitive: "to come", variant: "ing" },
     
        "thinks": { infinitive: "to think", variant: "third" },
        "thinking": { infinitive: "to think", variant: "ing" },
        "think": { infinitive: "to think", variant: "default" },
        "thought": { infinitive: "to think", variant: "ed" },
     
        "looks": { infinitive: "to look", variant: "third" },
        "looking": { infinitive: "to look", variant: "ing" },
        "looked": { infinitive: "to look", variant: "ed" },
        "look": { infinitive: "to look", variant: "default" },
     
        "wants": { infinitive: "to want", variant: "third" },
        "wanting": { infinitive: "to want", variant: "ing" },
        "wanted": { infinitive: "to want", variant: "ed" },
        "want": { infinitive: "to want", variant: "default" },
     
        "gives": { infinitive: "to give", variant: "third" },
        "giving": { infinitive: "to give", variant: "ing" },
        "given": { infinitive: "to give", variant: "ed" },
        "give": { infinitive: "to give", variant: "default" },
     
        "uses": { infinitive: "to use", variant: "third" },
        "using": { infinitive: "to use", variant: "ing" },
        "used": { infinitive: "to use", variant: "ed" },
        "use": { infinitive: "to use", variant: "default" },
     
        "finds": { infinitive: "to find", variant: "third" },
        "finding": { infinitive: "to find", variant: "ing" },
        "found": { infinitive: "to find", variant: "ed" },
        "find": { infinitive: "to find", variant: "default" },
     
        "tells": { infinitive: "to tell", variant: "third" },
        "telling": { infinitive: "to tell", variant: "ing" },
        "told": { infinitive: "to tell", variant: "ed" },
        "tell": { infinitive: "to tell", variant: "default" },
     
        "asks": { infinitive: "to ask", variant: "third" },
        "asking": { infinitive: "to ask", variant: "ing" },
        "asked": { infinitive: "to ask", variant: "ed" },
        "ask": { infinitive: "to ask", variant: "default" },
     
        "works": { infinitive: "to work", variant: "third" },
        "working": { infinitive: "to work", variant: "ing" },
        "worked": { infinitive: "to work", variant: "ed" },
        "work": { infinitive: "to work", variant: "default" },
     
        "seems": { infinitive: "to seem", variant: "third" },
        "seeming": { infinitive: "to seem", variant: "ing" },
        "seemed": { infinitive: "to seem", variant: "ed" },
        "seem": { infinitive: "to seem", variant: "default" },
     
        "feels": { infinitive: "to feel", variant: "third" },
        "feeling": { infinitive: "to feel", variant: "ing" },
        "felt": { infinitive: "to feel", variant: "ed" },
        "feel": { infinitive: "to feel", variant: "default" },
     
        "tries": { infinitive: "to try", variant: "third" },
        "trying": { infinitive: "to try", variant: "ing" },
        "tried": { infinitive: "to try", variant: "ed" },
        "try": { infinitive: "to try", variant: "default" },
     
        "leaves": { infinitive: "to leave", variant: "third" },
        "leave": { infinitive: "to leave", variant: "default" },
        "leaving": { infinitive: "to leave", variant: "ing" },
        "left": { infinitive: "to leave", variant: "ed" },
     
        "calls": { infinitive: "to call", variant: "third" },
        "calling": { infinitive: "to call", variant: "ing" },
        "called": { infinitive: "to call", variant: "ed" },
        "call": { infinitive: "to call", variant: "default" },
     
        "believes": { infinitive: "to believe", variant: "third" },
        "believing": { infinitive: "to believe", variant: "ing" },
        "believed": { infinitive: "to believe", variant: "ed" },
        "believe": { infinitive: "to believe", variant: "default" },
     
        "is": { infinitive: "to be", variant: "default" },
        "are": { infinitive: "to be", variant: "default" },
        "am": { infinitive: "to be", variant: "default" },
        "being": { infinitive: "to be", variant: "ing" },
        "been": { infinitive: "to be", variant: "ed" },
    };


    var auxiDef = {
        "does not ": {
            base: "do",
            person: "third",
            sign: "negative",
            numberCategory: "singular"
        },
        "does ": {
            base: "do",
            person: "third",
            sign: "positive",
            numberCategory: "singular"
        },
        "do not ": {
            base: "do",
            person: "other",
            sign: "negative",
            numberCategory: "unknown"
        },
        "do ": {
            base: "do",
            person: "other",
            sign: "positive",
            numberCategory: "unknown"
        },
        "are not ": {
            base: "be",
            person: "other",
            sign: "negative",
            numberCategory: "plural"
        },
        "are ": {
            base: "be",
            person: "other",
            sign: "positive",
            numberCategory: "plural",
        },
        "is not ": {
            base: "be",
            person: "unknown",
            sign: "negative",
            numberCategory: "singular"
        },
        "is ": {
            base: "be",
            person: "unknown",
            sign: "positive",
            numberCategory: "singular"
        },
        "be ": {
            base: "be",
            person: "infinitive",
            sign: "positive",
            numberCategory: "singular"
        },
        "must not ": {
            base: "must",
            person: "unknown",
            sign: "negative",
            numberCategory: "unknown"
        },
        "must ": {
            base: "must",
            person: "unknown",
            sign: "positive",
            numberCategory: "unknown"
        },
        "cannot ": {
            base: "can",
            person: "unknown",
            sign: "negative",
            numberCategory: "unknown"
        },
        "can ": {
            base: "can",
            person: "unknown",
            sign: "positive",
            numberCategory: "unknown"
        },
        "should not ": {
            base: "should",
            person: "unknown",
            sign: "negative",
            numberCategory: "unknown"
        },
        "should ": {
            base: "should",
            person: "unknown",
            sign: "positive",
            numberCategory: "unknown"
        },
        "may not ": {
            base: "may",
            person: "unknown",
            sign: "negative",
            numberCategory: "unknown"
        },
        "may ": {
            base: "may",
            person: "unknown",
            sign: "positive",
            numberCategory: "unknown"
        }
    };



    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(
        peg$maxFailExpected,
        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
        peg$maxFailPos < input.length
          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
      );
    }
  }

  return {
    SyntaxError: peg$SyntaxError,
    parse:       peg$parse
  };
})();
